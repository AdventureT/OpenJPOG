"Name","Location","FunctionSignature","FunctionSize"
"TNativeFileSystem","10006200","undefined TNativeFileSystem(TNativeFileSystem * this\, char * param_1)","109"
"~TNativeFileSystem","10006270","void ~TNativeFileSystem(TNativeFileSystem * this)","94"
"CreateFile","100062d0","TFile * CreateFile(TNativeFileSystem * this\, TCString * param_1\, uint param_2)","104"
"DestroyFile","10006340","void DestroyFile(TNativeFileSystem * this\, TFile * param_1)","33"
"MakeInternalPath","10006370","TCString MakeInternalPath(TNativeFileSystem * this\, TCString * param_1)","224"
"GetFirstFile","10006450","bool GetFirstFile(TNativeFileSystem * this\, TCString * param_1\, TCString * param_2\, uint param_3)","345"
"GetNextFile","100065b0","bool GetNextFile(TNativeFileSystem * this\, TCString * param_1\, uint param_2)","134"
"Read","10006640","int Read(TNativeFile * this\, void * param_1\, int param_2)","314"
"Write","10006780","int Write(TNativeFile * this\, void * param_1\, int param_2)","241"
"Seek","10006880","bool Seek(TNativeFile * this\, int param_1\, TSEEK param_2)","121"
"GetSize","10006900","int GetSize(TNativeFile * this)","46"
"GetDate","10006930","__uint64 GetDate(TNativeFile * this)","49"
"GetCChar","10006970","int GetCChar(TNativeFile * this)","90"
"GetWChar","100069d0","int GetWChar(TNativeFile * this)","104"
"VCPrintf","10006a40","int VCPrintf(TNativeFile * this\, char * param_1\, char * param_2)","84"
"VWPrintf","10006aa0","int VWPrintf(TNativeFile * this\, ushort * param_1\, char * param_2)","92"
"TNativeFile","10006b00","undefined TNativeFile(TNativeFile * this\, TNativeFileSystem * param_1)","62"
"Open","10006b40","bool Open(TNativeFile * this\, TCString * param_1\, uint param_2)","308"
"Close","10006c80","void Close(TNativeFile * this)","98"
"ReadUnbuffered","10006cf0","int ReadUnbuffered(TNativeFile * this\, void * param_1\, int param_2)","119"
"LoadBuffer","10006d70","bool LoadBuffer(TNativeFile * this\, int param_1)","165"
"FlushWriteBuffer","10006e20","int FlushWriteBuffer(TNativeFile * this)","115"
"~TNativeFile","10006ea0","void ~TNativeFile(TNativeFile * this)","16"
"PutWChar","10006eb0","int PutWChar(TNativeFile * this\, ushort param_1)","33"
"PutCChar","10006ee0","int PutCChar(TNativeFile * this\, char param_1)","33"
"Tell","10006f10","int Tell(TNativeFile * this)","4"
"MakeDirectory","10006f20","bool MakeDirectory(TNativeFileSystem * this\, TCString * param_1)","36"
"RemoveFile","10006f50","bool RemoveFile(TNativeFileSystem * this\, TCString * param_1)","34"
"operator=","10007000","TNativeFile * operator=(TNativeFile * this\, TNativeFile * param_1)","69"
"TNativeFile","10007050","undefined TNativeFile(TNativeFile * this\, TNativeFile * param_1)","81"
"GetFileSystem","100070b0","TNativeFileSystem * GetFileSystem(TNativeFile * this)","4"
"operator=","100070c0","TNativeFileSystem * operator=(TNativeFileSystem * this\, TNativeFileSystem * param_1)","71"
"TNativeFileSystem","10007110","undefined TNativeFileSystem(TNativeFileSystem * this\, TNativeFileSystem * param_1)","73"
"operator=","10007160","TFile * operator=(TFile * this\, TFile * param_1)","15"
"TFile","10007170","undefined TFile(TFile * this\, TFile * param_1)","21"
"GetFileSystem","10007190","TFileSystem * GetFileSystem(TFile * this)","4"
"GetDate","100071a0","__uint64 GetDate(TFile * this)","5"
"operator=","100071b0","TFileSystem * operator=(TFileSystem * this\, TFileSystem * param_1)","65"
"TFileSystem","10007200","undefined TFileSystem(TFileSystem * this\, TFileSystem * param_1)","61"
"GetPrefix","10007240","TCString * GetPrefix(TFileSystem * this)","6"
"GetName","10007250","TCString * GetName(TFileSystem * this)","6"
"GetNextFile","10007260","bool GetNextFile(TFileSystem * this\, TCString * param_1\, uint param_2)","5"
"GetFirstFile","10007270","bool GetFirstFile(TFileSystem * this\, TCString * param_1\, TCString * param_2\, uint param_3)","5"
"RemoveFile","10007280","bool RemoveFile(TFileSystem * this\, TCString * param_1)","8"
"TSysPathIter","10007290","undefined TSysPathIter(TSysPathIter * this\, TCString * param_1)","18"
"operator=","100072b0","TFileManager * operator=(TFileManager * this\, TFileManager * param_1)","77"
"TFileManager","10007300","undefined TFileManager(TFileManager * this\, TFileManager * param_1)","77"
"GetFileManager","10007350","TFileManager * GetFileManager(void)","6"
"operator=","10007360","TNullEvent * operator=(TNullEvent * this\, TNullEvent * param_1)","5"
"operator=","10007370","TGenericListener * operator=(TGenericListener * this\, TGenericListener * param_1)","37"
"operator=","100073a0","TGenericEmitter * operator=(TGenericEmitter * this\, TGenericEmitter * param_1)","25"
"operator=","100073c0","TMutexLock * operator=(TMutexLock * this\, TMutexLock * param_1)","13"
"~TMutexLock","100073d0","void ~TMutexLock(TMutexLock * this)","10"
"TMutexLock","100073e0","undefined TMutexLock(TMutexLock * this\, TMutex * param_1)","21"
"TMutexLock","10007400","undefined TMutexLock(TMutexLock * this)","9"
"operator=","10007410","TThreadManager * operator=(TThreadManager * this\, TThreadManager * param_1)","55"
"GetThreadManager","10007450","TThreadManager * GetThreadManager(void)","6"
"~TThreadManager","10007460","void ~TThreadManager(TThreadManager * this)","22"
"TThreadManager","10007480","undefined TThreadManager(TThreadManager * this)","23"
"operator=","100074a0","TThread * operator=(TThread * this\, TThread * param_1)","47"
"TThread","100074d0","undefined TThread(TThread * this\, TThread * param_1)","39"
"TThread","10007500","undefined TThread(TThread * this)","18"
"operator=","10007520","TGenericFifo * operator=(TGenericFifo * this\, TGenericFifo * param_1)","91"
"~TGenericFifo","10007580","void ~TGenericFifo(TGenericFifo * this)","92"
"TGenericFifo","100075e0","undefined TGenericFifo(TGenericFifo * this)","11"
"operator=","100075f0","TMutex * operator=(TMutex * this\, TMutex * param_1)","13"
"~TMutex","10007600","void ~TMutex(TMutex * this)","43"
"TMutex","10007630","undefined TMutex(TMutex * this)","9"
"operator=","10007640","TSemaphore * operator=(TSemaphore * this\, TSemaphore * param_1)","13"
"~TSemaphore","10007650","void ~TSemaphore(TSemaphore * this)","43"
"TSemaphore","10007680","undefined TSemaphore(TSemaphore * this)","9"
"operator=","10007690","TNode * operator=(TNode * this\, TNode * param_1)","25"
"Remove","100076b0","void Remove(TNode * this)","21"
"SetPriority","100076d0","void SetPriority(TNode * this\, int param_1)","10"
"GetPriority","100076e0","int GetPriority(TNode * this)","4"
"IsLinked","100076f0","bool IsLinked(TNode * this)","8"
"Prev","10007700","TNode * Prev(TNode * this)","4"
"Next","10007710","TNode * Next(TNode * this)","3"
"TNode","10007720","undefined TNode(TNode * this\, TUninitialised param_1)","5"
"TNode","10007730","undefined TNode(TNode * this)","15"
"Reset","10007740","void Reset(TNode * this)","13"
"operator=","10007750","TGenericPriList * operator=(TGenericPriList * this\, TGenericPriList * param_1)","19"
"~TGenericPriList","10007770","void ~TGenericPriList(TGenericPriList * this)","10"
"TGenericPriList","10007780","undefined TGenericPriList(TGenericPriList * this)","8"
"RemoveAll","10007790","void RemoveAll(TGenericPriList * this)","10"
"RemoveTail","100077a0","void RemoveTail(TGenericPriList * this)","28"
"RemoveHead","100077c0","void RemoveHead(TGenericPriList * this)","27"
"Insert","100077e0","void Insert(TGenericPriList * this\, TNode * param_1\, int param_2)","37"
"IsEmpty","10007810","bool IsEmpty(TGenericPriList * this)","8"
"REnd","10007820","TNode * REnd(TGenericPriList * this)","3"
"RBegin","10007830","TNode * RBegin(TGenericPriList * this)","4"
"End","10007840","TNode * End(TGenericPriList * this)","3"
"Begin","10007850","TNode * Begin(TGenericPriList * this)","3"
"Tail","10007860","TNode * Tail(TGenericPriList * this)","4"
"Head","10007870","TNode * Head(TGenericPriList * this)","3"
"operator=","10007880","TNode * operator=(TNode * this\, TNode * param_1)","19"
"Remove","100078a0","void Remove(TNode * this)","21"
"InsertAfter","100078c0","void InsertAfter(TNode * this\, TNode * param_1)","77"
"InsertBefore","10007910","void InsertBefore(TNode * this\, TNode * param_1)","79"
"IsLinked","10007960","bool IsLinked(TNode * this)","8"
"Prev","10007970","TNode * Prev(TNode * this)","4"
"Next","10007980","TNode * Next(TNode * this)","3"
"TNode","10007990","undefined TNode(TNode * this\, TUninitialised param_1)","5"
"TNode","100079a0","undefined TNode(TNode * this)","8"
"Reset","100079b0","void Reset(TNode * this)","6"
"operator=","100079c0","TGenericDList * operator=(TGenericDList * this\, TGenericDList * param_1)","19"
"InsertSegmentAtTail","100079e0","void InsertSegmentAtTail(TGenericDList * this\, TNode * param_1\, TNode * param_2)","29"
"InsertSegmentAtHead","10007a00","void InsertSegmentAtHead(TGenericDList * this\, TNode * param_1\, TNode * param_2)","28"
"RemoveSegment","10007a20","void RemoveSegment(TNode * param_1\, TNode * param_2)","33"
"InsertSegmentAfter","10007a50","void InsertSegmentAfter(TNode * param_1\, TNode * param_2\, TNode * param_3)","32"
"InsertSegmentBefore","10007a70","void InsertSegmentBefore(TNode * param_1\, TNode * param_2\, TNode * param_3)","33"
"RemoveTail","10007aa0","void RemoveTail(TGenericDList * this)","30"
"RemoveHead","10007ac0","void RemoveHead(TGenericDList * this)","30"
"InsertTail","10007ae0","void InsertTail(TGenericDList * this\, TNode * param_1)","19"
"InsertHead","10007b00","void InsertHead(TGenericDList * this\, TNode * param_1)","19"
"IsEmpty","10007b20","bool IsEmpty(TGenericDList * this)","21"
"REnd","10007b40","TNode * REnd(TGenericDList * this)","3"
"RBegin","10007b50","TNode * RBegin(TGenericDList * this)","10"
"End","10007b60","TNode * End(TGenericDList * this)","3"
"Begin","10007b70","TNode * Begin(TGenericDList * this)","10"
"Tail","10007b80","TNode * Tail(TGenericDList * this)","10"
"Head","10007b90","TNode * Head(TGenericDList * this)","10"
"~TGenericDList","10007ba0","void ~TGenericDList(TGenericDList * this)","10"
"TGenericDList","10007bb0","undefined TGenericDList(TGenericDList * this)","14"
"operator=","10007bc0","TSystem * operator=(TSystem * this\, TSystem * param_1)","5"
"GetTempWString","10007bd0","ushort * GetTempWString(void)","6"
"GetTempCString","10007be0","char * GetTempCString(void)","6"
"GetScratchMem","10007bf0","uchar * GetScratchMem(void)","6"
"operator=","10007c00","TDateTime * operator=(TDateTime * this\, TDateTime * param_1)","19"
"TObject","10007c20","undefined TObject(TObject * this\, TObject * param_1)","11"
"operator=","10007c30","TClass * operator=(TClass * this\, TClass * param_1)","67"
"operator=","10007c80","TRefCounted * operator=(TRefCounted * this\, TRefCounted * param_1)","5"
"TRefCounted","10007c90","undefined TRefCounted(TRefCounted * this\, TRefCounted * param_1)","11"
"DecRefCount","10007ca0","int DecRefCount(TRefCounted * this\, void * param_1)","8"
"IncRefCount","10007cb0","int IncRefCount(TRefCounted * this\, void * param_1)","8"
"~TRefCounted","10007cc0","void ~TRefCounted(TRefCounted * this)","1"
"TRefCounted","10007cd0","undefined TRefCounted(TRefCounted * this)","9"
"GetRefCount","10007ce0","int GetRefCount(TRefCounted * this)","3"
"operator=","10007cf0","TDebug * operator=(TDebug * this\, TDebug * param_1)","5"
"IsDebugFileEnabled","10007d00","bool IsDebugFileEnabled(void)","8"
"GetDebugFile","10007d10","TFile * GetDebugFile(void)","6"
"Create","10007d20","bool Create(TSemaphore * this\, int param_1\, int param_2)","163"
"Destroy","10007dd0","bool Destroy(TSemaphore * this)","80"
"Signal","10007e30","bool Signal(TSemaphore * this)","78"
"Wait","10007e90","bool Wait(TSemaphore * this)","76"
"Poll","10007ee0","bool Poll(TSemaphore * this)","76"
"Create","10007f30","bool Create(TMutex * this)","70"
"Destroy","10007f80","bool Destroy(TMutex * this)","80"
"Lock","10007fe0","bool Lock(TMutex * this\, uint param_1)","103"
"Unlock","10008050","bool Unlock(TMutex * this)","74"
"Create","100080a0","bool Create(TGenericFifo * this\, void * param_1\, int param_2\, int param_3)","319"
"Destroy","100081f0","bool Destroy(TGenericFifo * this)","128"
"Push","10008270","bool Push(TGenericFifo * this\, void * param_1\, uint param_2)","233"
"Pop","10008360","bool Pop(TGenericFifo * this\, void * param_1\, uint param_2)","233"
"Create","10008450","bool Create(TThread * this\, STACKSIZE param_1\, PRIORITY param_2\, uint param_3)","294"
"Destroy","10008580","bool Destroy(TThread * this)","263"
"Suspend","10008690","bool Suspend(TThread * this)","80"
"Resume","100086f0","bool Resume(TThread * this)","80"
"Exit","10008750","void Exit(void)","88"
"Exit","100087b0","void Exit(TThread * param_1)","247"
"SetPriority","100088b0","bool SetPriority(void * param_1\, PRIORITY param_2)","117"
"GetPriority","10008930","bool GetPriority(void * param_1\, PRIORITY * param_2)","124"
"Create","100089b0","void Create(TThreadManager * this)","73"
"Destroy","10008a00","void Destroy(TThreadManager * this)","77"
"InsertThread","10008a50","void InsertThread(TThreadManager * this\, TThread * param_1)","113"
"FindThread","10008ad0","TThread * FindThread(TThreadManager * this\, uint param_1)","89"
"RemoveThread","10008bb0","void RemoveThread(TThreadManager * this\, TThread * param_1)","57"
"Entry","10008bf0","uint Entry(void * param_1)","24"
"GetCurrentPriority","10008c10","bool GetCurrentPriority(PRIORITY * param_1)","22"
"SetCurrentPriority","10008c30","bool SetCurrentPriority(PRIORITY param_1)","22"
"Yield","10008c50","bool Yield(void)","14"
"GetPriority","10008c60","bool GetPriority(TThread * this\, PRIORITY * param_1)","21"
"SetPriority","10008c80","bool SetPriority(TThread * this\, PRIORITY param_1)","21"
"ComparePlane","10008ca0","PlaneComparison ComparePlane(TAABox * this\, TPlane * param_1)","123"
"BoxUnion","10008d20","void BoxUnion(TAABox * this\, TAABox * param_1\, uint param_2)","556"
"TAABox","10008f60","undefined TAABox(TAABox * this)","3"
"SetBox","10008f70","void SetBox(TAABox * this\, float * param_1\, float * param_2\, float * param_3\, float * param_4\, float * param_5\, float * param_6)","58"
"SetBounds","10008fb0","void SetBounds(TAABox * this\, TVector3 * param_1)","24"
"SetCentre","10008fd0","void SetCentre(TAABox * this\, TVector3 * param_1)","23"
"GetBounds","10008ff0","TVector3 * GetBounds(TAABox * this)","6"
"GetCentre","10009000","TVector3 * GetCentre(TAABox * this)","3"
"operator=","10009010","TAABox * operator=(TAABox * this\, TAABox * param_1)","43"
"TAABox","10009040","undefined TAABox(TAABox * this\, TAABox * param_1)","43"
"TAABox","10009070","undefined TAABox(TAABox * this\, float * param_1\, float * param_2\, float * param_3\, float * param_4\, float * param_5\, float * param_6)","60"
"TAABox","100090b0","undefined TAABox(TAABox * this\, TVector3 * param_1\, TVector3 * param_2)","46"
"Negate","100090e0","void Negate(TPlane * this\, TPlane * param_1)","17"
"Negate","10009100","void Negate(TPlane * this)","10"
"SetD","10009110","void SetD(TPlane * this\, float param_1)","10"
"GetD","10009120","float GetD(TPlane * this)","4"
"SetNormal","10009130","void SetNormal(TPlane * this\, float param_1\, float param_2\, float param_3)","23"
"SetNormal","10009150","void SetNormal(TPlane * this\, TVector3 * param_1)","23"
"GetNormal","10009170","TVector3 * GetNormal(TPlane * this)","3"
"SetPoint","10009180","void SetPoint(TPlane * this\, TVector3 * param_1)","21"
"GetPoint","100091a0","void GetPoint(TPlane * this\, TVector3 * param_1)","23"
"operator=","100091c0","TPlane * operator=(TPlane * this\, TPlane * param_1)","31"
"TPlane","100091e0","undefined TPlane(TPlane * this\, TPlane * param_1)","31"
"TPlane","10009200","undefined TPlane(TPlane * this\, TVector4 * param_1)","31"
"TPlane","10009220","undefined TPlane(TPlane * this\, TVector3 * param_1\, float param_2)","32"
"TPlane","10009240","undefined TPlane(TPlane * this\, TVector3 * param_1\, TVector3 * param_2)","43"
"TPlane","10009270","undefined TPlane(TPlane * this\, float param_1\, float param_2\, float param_3\, float param_4)","32"
"Set","10009290","void Set(TPlane * this\, TPlane * param_1)","29"
"Set","100092b0","void Set(TPlane * this\, TVector4 * param_1)","29"
"Set","100092d0","void Set(TPlane * this\, TVector3 * param_1\, float param_2)","30"
"Set","100092f0","void Set(TPlane * this\, TVector3 * param_1\, TVector3 * param_2)","41"
"Set","10009320","void Set(TPlane * this\, float param_1\, float param_2\, float param_3\, float param_4)","30"
"AsNormal","10009340","TVector3 * AsNormal(TPlane * this)","3"
"AsNormal","10009350","TVector3 * AsNormal(TPlane * this)","3"
"AsVector4","10009360","TVector4 * AsVector4(TPlane * this)","3"
"AsVector4","10009370","TVector4 * AsVector4(TPlane * this)","3"
"TPlane","10009380","undefined TPlane(TPlane * this)","3"
"operator=","10009390","TVector4 * operator=(TVector4 * this\, TVector4 * param_1)","31"
"AsVector3","100093b0","TVector3 * AsVector3(TVector4 * this)","3"
"AsVector3","100093c0","TVector3 * AsVector3(TVector4 * this)","3"
"DotProduct","100093d0","float DotProduct(TVector4 * this\, TVector4 * param_1)","18"
"DotProduct4","100093f0","float DotProduct4(TVector4 * this\, TVector4 * param_1)","18"
"DotProduct3","10009410","float DotProduct3(TVector4 * this\, TVector4 * param_1)","18"
"Lerp3","10009430","void Lerp3(TVector4 * this\, TVector4 * param_1\, float param_2)","23"
"Lerp","10009450","void Lerp(TVector4 * this\, TVector4 * param_1\, float param_2)","23"
"DotProduct","10009470","float DotProduct(TVector4 * param_1\, TVector4 * param_2)","22"
"Negate","10009490","void Negate(TVector4 * this)","10"
"Negate","100094a0","void Negate(TVector4 * this\, TVector4 * param_1)","17"
"Set","100094c0","void Set(TVector4 * this\, TVector3 * param_1)","30"
"Set","100094e0","void Set(TVector4 * this\, float param_1\, float param_2\, float param_3\, float param_4)","30"
"operator!=","10009500","bool operator!=(TVector4 * this\, TVector4 * param_1)","27"
"operator==","10009520","bool operator==(TVector4 * this\, TVector4 * param_1)","17"
"operator/=","10009540","TVector4 * operator/=(TVector4 * this\, float param_1)","21"
"operator/=","10009560","TVector4 * operator/=(TVector4 * this\, TVector4 * param_1)","21"
"operator*=","10009580","TVector4 * operator*=(TVector4 * this\, float param_1)","21"
"operator*=","100095a0","TVector4 * operator*=(TVector4 * this\, TVector4 * param_1)","21"
"operator-=","100095c0","TVector4 * operator-=(TVector4 * this\, TVector4 * param_1)","21"
"operator+=","100095e0","TVector4 * operator+=(TVector4 * this\, TVector4 * param_1)","21"
"operator()","10009600","float * operator()(TVector4 * this\, uint param_1)","10"
"operator()","10009610","float * operator()(TVector4 * this\, uint param_1)","10"
"TVector4","10009620","undefined TVector4(TVector4 * this\, float * param_1)","21"
"TVector4","10009640","undefined TVector4(TVector4 * this\, float param_1\, float param_2\, float param_3\, float param_4)","42"
"TVector4","10009670","undefined TVector4(TVector4 * this\, TVector4 * param_1)","31"
"TVector4","10009690","undefined TVector4(TVector4 * this)","3"
"operator=","100096a0","TVector3 * operator=(TVector3 * this\, TVector3 * param_1)","25"
"DotProduct","100096c0","float DotProduct(TVector3 * this\, TVector3 * param_1)","18"
"Set","100096e0","void Set(TVector3 * this\, float param_1\, float param_2\, float param_3)","23"
"operator!=","10009700","bool operator!=(TVector3 * this\, TVector3 * param_1)","27"
"operator==","10009720","bool operator==(TVector3 * this\, TVector3 * param_1)","17"
"operator/=","10009740","TVector3 * operator/=(TVector3 * this\, float param_1)","21"
"operator/=","10009760","TVector3 * operator/=(TVector3 * this\, TVector3 * param_1)","21"
"operator*=","10009780","TVector3 * operator*=(TVector3 * this\, float param_1)","21"
"operator*=","100097a0","TVector3 * operator*=(TVector3 * this\, TVector3 * param_1)","21"
"operator-=","100097c0","TVector3 * operator-=(TVector3 * this\, TVector3 * param_1)","21"
"operator+=","100097e0","TVector3 * operator+=(TVector3 * this\, TVector3 * param_1)","21"
"operator()","10009800","float * operator()(TVector3 * this\, uint param_1)","10"
"operator()","10009810","float * operator()(TVector3 * this\, uint param_1)","10"
"TVector3","10009820","undefined TVector3(TVector3 * this\, float * param_1)","21"
"TVector3","10009840","undefined TVector3(TVector3 * this\, float param_1\, float param_2\, float param_3)","31"
"TVector3","10009860","undefined TVector3(TVector3 * this\, TVector3 * param_1)","25"
"TVector3","10009880","undefined TVector3(TVector3 * this)","3"
"Create","10009910","bool Create(TBitArray * this\, int param_1\, int param_2)","122"
"Reset","10009990","void Reset(TBitArray * this)","134"
"FindFirstSetBit","10009a20","int FindFirstSetBit(TBitArray * this)","717"
"FindFirstClearBit","10009cf0","int FindFirstClearBit(TBitArray * this)","718"
"SetBit","10009fc0","void SetBit(TBitArray * this\, int param_1\, int param_2)","149"
"Destroy","1000a060","void Destroy(TBitArray * this)","21"
"operator=","1000a080","TBitArray * operator=(TBitArray * this\, TBitArray * param_1)","25"
"ToggleBit","1000a0a0","void ToggleBit(TBitArray * this\, int param_1)","83"
"ClearBit","1000a100","void ClearBit(TBitArray * this\, int param_1)","86"
"SetBit","1000a160","void SetBit(TBitArray * this\, int param_1)","83"
"GetBit","1000a1c0","int GetBit(TBitArray * this\, int param_1)","81"
"~TBitArray","1000a220","void ~TBitArray(TBitArray * this)","10"
"TBitArray","1000a230","undefined TBitArray(TBitArray * this\, int param_1\, int param_2)","26"
"TBitArray","1000a250","undefined TBitArray(TBitArray * this)","13"
"operator=","1000a260","MemBlockSlot * operator=(MemBlockSlot * this\, MemBlockSlot * param_1)","31"
"~MemBlockSlot","1000a280","void ~MemBlockSlot(MemBlockSlot * this)","46"
"MemBlockSlot","1000a2b0","undefined MemBlockSlot(MemBlockSlot * this)","15"
"GetSlotIndex","1000a2c0","uint GetSlotIndex(TMemory * this\, MemBlockSlot * param_1)","15"
"IsDebug","1000a2d0","bool IsDebug(void)","8"
"IsInitialised","1000a2e0","bool IsInitialised(void)","8"
"SetHoleSize","1000a2f0","void SetHoleSize(MemNode * param_1\, uint param_2)","14"
"IsProcess","1000a300","bool IsProcess(MemNode * param_1)","25"
"ExtendNodeSize","1000a320","void ExtendNodeSize(MemNode * param_1\, uint param_2)","22"
"SetProcess","1000a340","void SetProcess(MemBlock * param_1\, MemNode * param_2\, uint param_3)","58"
"GetNodeSize","1000a380","uint GetNodeSize(MemNode * param_1)","15"
"GetProcessMemBlock","1000a390","MemBlock * GetProcessMemBlock(MemNode * param_1)","33"
"ConvertProcessToHole","1000a3c0","void ConvertProcessToHole(MemNode * param_1)","18"
"GetGlobalFlags","1000a3e0","uint GetGlobalFlags(TMemory * this)","7"
"operator=","1000a3f0","Iterator * operator=(Iterator * this\, Iterator * param_1)","13"
"operator=","1000a400","TNode * operator=(TNode * this\, TNode * param_1)","27"
"TNode","1000a420","undefined TNode(TNode * this\, TNode * param_1)","33"
"operator=","1000a450","TGenericNodeList * operator=(TGenericNodeList * this\, TGenericNodeList * param_1)","55"
"TGenericNodeList","1000a490","undefined TGenericNodeList(TGenericNodeList * this\, TGenericNodeList * param_1)","62"
"operator=","1000a4d0","TNode * operator=(TNode * this\, TNode * param_1)","19"
"RemoveChild","1000a4f0","void RemoveChild(TNode * this\, int param_1)","25"
"InsertChild","1000a510","void InsertChild(TNode * this\, int param_1\, TNode * param_2)","17"
"Child","1000a530","TNode * Child(TNode * this\, int param_1)","11"
"Parent","1000a540","TNode * Parent(TNode * this)","3"
"operator=","1000a550","TGenericNTree * operator=(TGenericNTree * this\, TGenericNTree * param_1)","13"
"RemoveRoot","1000a560","void RemoveRoot(TGenericNTree * this)","7"
"InsertRoot","1000a570","void InsertRoot(TGenericNTree * this\, TNode * param_1)","15"
"Root","1000a580","TNode * Root(TGenericNTree * this)","3"
"TGenericNTree","1000a590","undefined TGenericNTree(TGenericNTree * this)","9"
"TCString","1000a5a0","undefined TCString(TCString * this)","39"
"TCString","1000a5d0","undefined TCString(TCString * this\, int param_1)","44"
"Format","1000a600","TCString * Format(TCString * this\, char * param_1\, ...)","82"
"Mid","1000a660","TCString Mid(TCString * this\, int param_1\, int param_2)","150"
"Copy","1000a700","void Copy(TCString * this\, TCString * param_1\, int param_2)","77"
"Copy","1000a750","void Copy(TCString * this\, TWString * param_1\, int param_2)","79"
"Copy","1000a7a0","void Copy(TCString * this\, char * param_1\, int param_2)","80"
"Copy","1000a7f0","void Copy(TCString * this\, ushort * param_1\, int param_2)","70"
"Compare","1000a840","int Compare(TCString * this\, char * param_1\, int param_2)","223"
"CompareNoCase","1000a930","int CompareNoCase(TCString * this\, char * param_1\, int param_2)","191"
"Concat","1000aa00","TCString * Concat(TCString * this\, TCString * param_1\, int param_2)","155"
"Concat","1000aaa0","TCString * Concat(TCString * this\, TWString * param_1\, int param_2)","157"
"Concat","1000ab40","TCString * Concat(TCString * this\, char * param_1\, int param_2)","151"
"Find","1000abe0","int Find(TCString * this\, char * param_1\, int param_2)","105"
"Find","1000ac50","int Find(TCString * this\, char param_1\, int param_2)","106"
"FindReverse","1000acc0","int FindReverse(TCString * this\, char param_1\, int param_2)","154"
"Truncate","1000ad60","void Truncate(TCString * this\, int param_1)","117"
"IsAllLowerCase","1000ade0","bool IsAllLowerCase(TCString * this)","42"
"IsAllUpperCase","1000ae10","bool IsAllUpperCase(TCString * this)","42"
"operator[]","1000ae40","char * operator[](TCString * this\, int param_1)","82"
"operator[]","1000aea0","char * operator[](TCString * this\, int param_1)","85"
"operator+","1000af00","TCString operator+(TCString * this\, char * param_1)","134"
"operator+","1000af90","TCString operator+(TCString * this\, ushort * param_1)","134"
"IsIndexValid","1000b020","bool IsIndexValid(TCString * this\, int param_1)","33"
"Print","1000b050","TCString * Print(TCString * this)","111"
"ForceSetData","1000b0d0","void ForceSetData(TCString * this\, char * param_1\, int param_2)","225"
"UndoForceSetData","1000b1c0","void UndoForceSetData(TCString * this)","22"
"Reset","1000b1e0","void Reset(TCString * this)","22"
"AllocBuffer","1000b200","bool AllocBuffer(TCString * this\, int param_1\, bool param_2)","290"
"operator+","1000b330","TCString operator+(char * param_1\, TCString * param_2)","105"
"operator>=","1000b3a0","bool operator>=(char * param_1\, TCString * param_2)","40"
"operator<=","1000b3d0","bool operator<=(char * param_1\, TCString * param_2)","40"
"operator>","1000b400","bool operator>(char * param_1\, TCString * param_2)","40"
"operator<","1000b430","bool operator<(char * param_1\, TCString * param_2)","40"
"operator!=","1000b460","bool operator!=(char * param_1\, TCString * param_2)","40"
"operator==","1000b490","bool operator==(char * param_1\, TCString * param_2)","40"
"FreeBuffer","1000b4c0","void FreeBuffer(TCString * this)","45"
"IsUnicode","1000b4f0","bool IsUnicode(TCString * this)","3"
"GetString","1000b500","char * GetString(TCString * this\, int param_1)","46"
"operator>=","1000b530","bool operator>=(TCString * this\, char * param_1)","36"
"operator>=","1000b560","bool operator>=(TCString * this\, TCString * param_1)","38"
"operator<=","1000b590","bool operator<=(TCString * this\, char * param_1)","36"
"operator<=","1000b5c0","bool operator<=(TCString * this\, TCString * param_1)","38"
"operator>","1000b5f0","bool operator>(TCString * this\, char * param_1)","36"
"operator>","1000b620","bool operator>(TCString * this\, TCString * param_1)","38"
"operator<","1000b650","bool operator<(TCString * this\, char * param_1)","36"
"operator<","1000b680","bool operator<(TCString * this\, TCString * param_1)","38"
"operator!=","1000b6b0","bool operator!=(TCString * this\, char * param_1)","36"
"operator!=","1000b6e0","bool operator!=(TCString * this\, TCString * param_1)","38"
"operator==","1000b710","bool operator==(TCString * this\, char * param_1)","36"
"operator==","1000b740","bool operator==(TCString * this\, TCString * param_1)","38"
"operator+","1000b770","TCString operator+(TCString * this\, TWString * param_1)","48"
"operator+","1000b7a0","TCString operator+(TCString * this\, TCString * param_1)","48"
"operator+=","1000b7d0","TCString * operator+=(TCString * this\, char * param_1)","23"
"operator+=","1000b7f0","TCString * operator+=(TCString * this\, TWString * param_1)","23"
"operator+=","1000b810","TCString * operator+=(TCString * this\, TCString * param_1)","23"
"operator!","1000b830","bool operator!(TCString * this)","19"
"operator=","1000b850","TCString * operator=(TCString * this\, ushort * param_1)","23"
"operator=","1000b870","TCString * operator=(TCString * this\, char * param_1)","23"
"operator=","1000b890","TCString * operator=(TCString * this\, TWString * param_1)","23"
"operator=","1000b8b0","TCString * operator=(TCString * this\, TCString * param_1)","23"
"operator_char_const*","1000b8d0","char * operator_char_const*(TCString * this)","3"
"MakeLower","1000b8e0","TCString * MakeLower(TCString * this)","32"
"MakeUpper","1000b900","TCString * MakeUpper(TCString * this)","32"
"IsEmpty","1000b920","bool IsEmpty(TCString * this)","19"
"ExcessLength","1000b940","int ExcessLength(TCString * this)","5"
"Length","1000b950","int Length(TCString * this)","9"
"VFormat","1000b960","TCString * VFormat(TCString * this\, char * param_1\, char * param_2)","78"
"~TCString","1000b9b0","void ~TCString(TCString * this)","10"
"TCString","1000b9c0","undefined TCString(TCString * this\, TWString * param_1)","36"
"TCString","1000b9f0","undefined TCString(TCString * this\, TCString * param_1)","36"
"TCString","1000ba20","undefined TCString(TCString * this\, ushort * param_1)","36"
"TCString","1000ba50","undefined TCString(TCString * this\, char * param_1)","36"
"operator=","1000ba80","TProfilerStarter * operator=(TProfilerStarter * this\, TProfilerStarter * param_1)","105"
"operator=","1000baf0","TProfiler * operator=(TProfiler * this\, TProfiler * param_1)","28"
"ElapsedInMS","1000bb10","double ElapsedInMS(TProfiler * this)","18"
"AddCounterStructs","1000bb30","void AddCounterStructs(TProfiler * this\, undefined param_1\, undefined param_2)","153"
"Add","1000bbd0","void Add(TProfiler * this\, __int64 * param_1\, __int64 * param_2)","91"
"RestartPC","1000bc30","void RestartPC(void)","1"
"IsRunning","1000bc40","bool IsRunning(TProfiler * this)","15"
"~TProfiler","1000bc50","void ~TProfiler(TProfiler * this)","1"
"SetupDynamicImageHelp","1000bd20","void SetupDynamicImageHelp(void)","514"
"AssertHandler","1000bf30","bool AssertHandler(char * param_1\, char * param_2\, int param_3\, bool * param_4)","291"
"PrintIndent","1000c060","void PrintIndent(void)","78"
"OpenDebugFile","1000c0b0","bool OpenDebugFile(char * param_1)","248"
"TDebug_VPrintfDirect","1000c1b0","void TDebug_VPrintfDirect(uint param_1\, char * param_2\, char * param_3)","273"
"TDebug_PrintfUser","1000c2d0","void TDebug_PrintfUser(TUser * param_1\, char * param_2\, ...)","73"
"TDebug_PrintError","1000c320","void TDebug_PrintError(char * param_1\, ...)","78"
"TDebug_PrintWarning","1000c370","void TDebug_PrintWarning(char * param_1\, ...)","78"
"TDebug_Message","1000c3c0","void TDebug_Message(MSGLEVEL param_1\, char * param_2\, ...)","40"
"TDebug_PrintfDirect","1000c3f0","void TDebug_PrintfDirect(char * param_1\, ...)","66"
"TDebug_PrintfDirect","1000c440","void TDebug_PrintfDirect(uint param_1\, char * param_2\, ...)","25"
"TDebug_VPrintf","1000c460","void TDebug_VPrintf(uint param_1\, char * param_2\, char * param_3)","27"
"TDebug_CPrintf","1000c480","void TDebug_CPrintf(int param_1\, char * param_2\, ...)","30"
"TDebug_Printf","1000c4a0","void TDebug_Printf(char * param_1\, ...)","22"
"TDebug_Printf","1000c4c0","void TDebug_Printf(uint param_1\, char * param_2\, ...)","25"
"DebugFilePrintString","1000c4e0","void DebugFilePrintString(char * param_1)","67"
"EnableDebugFile","1000c530","bool EnableDebugFile(bool param_1)","20"
"CloseDebugFile","1000c550","void CloseDebugFile(void)","33"
"DumpCallStackToFile","1000c580","void DumpCallStackToFile(TFile * param_1\, int param_2\, int * param_3\, int param_4)","3"
"DumpCallStack","1000c590","void DumpCallStack(int param_1\, int * param_2\, int param_3)","3"
"GetCallStack","1000c5a0","void GetCallStack(int param_1\, int * param_2)","3"
"IsValidAddress","1000c5b0","bool IsValidAddress(void * param_1)","34"
"ResetOutput","1000c5e0","void ResetOutput(void)","1"
"MemoryDumpAllObjectsSince","1000c5f0","void MemoryDumpAllObjectsSince(MemoryState * param_1)","3"
"MemoryDumpStatistics","1000c600","void MemoryDumpStatistics(MemoryState * param_1)","3"
"MemoryDifference","1000c610","void MemoryDifference(MemoryState * param_1\, MemoryState * param_2\, MemoryState * param_3)","3"
"MemoryCheckPoint","1000c620","void MemoryCheckPoint(MemoryState * param_1)","3"
"operator=","1000c710","TUser * operator=(TUser * this\, TUser * param_1)","29"
"GetUserID","1000c730","short GetUserID(TUser * this)","5"
"GetNameLength","1000c740","short GetNameLength(TUser * this)","5"
"GetName","1000c750","char * GetName(TUser * this)","3"
"IsRegistered","1000c760","bool IsRegistered(TUser * this)","20"
"operator=","1000c780","TUserHandler * operator=(TUserHandler * this\, TUserHandler * param_1)","28"
"GetUser","1000c7a0","TUser * GetUser(TUserHandler * this\, int param_1)","11"
"GetUserCount","1000c7b0","int GetUserCount(TUserHandler * this)","3"
"GetSingleton","1000c7c0","TUserHandler * GetSingleton(void)","6"
"RemoveAll","1000c7d0","void RemoveAll(TGenericDList * this)","50"
"Insert","1000c810","void Insert(TGenericPriList * this\, TNode * param_1)","175"
"InsertTail","1000c8c0","void InsertTail(TGenericPriList * this\, TNode * param_1)","86"
"InsertHead","1000c920","void InsertHead(TGenericPriList * this\, TNode * param_1)","84"
"SetPriority","1000c980","void SetPriority(TGenericPriList * this\, TNode * param_1\, int param_2)","49"
"Load","1000ca40","bool Load(TDLL * this\, TCString * param_1)","133"
"Unload","1000cad0","void Unload(TDLL * this)","39"
"GetAddress","1000cb00","void * GetAddress(TDLL * this\, TCString * param_1)","87"
"GetDLL","1000cb60","void * GetDLL(TDLL * this)","4"
"GetFilename","1000cb70","TCString * GetFilename(TDLL * this)","6"
"~TDLL","1000cb80","void ~TDLL(TDLL * this)","28"
"TDLL","1000cba0","undefined TDLL(TDLL * this)","29"
"operator=","1000cbc0","TDLL * operator=(TDLL * this\, TDLL * param_1)","37"
"TDLL","1000cbf0","undefined TDLL(TDLL * this\, TDLL * param_1)","43"
"Destroy","1000cc20","void Destroy(TGenericEmitter * this)","45"
"Throw","1000cc50","void Throw(TGenericEmitter * this\, void * param_1)","52"
"Connect","1000cc90","void Connect(TGenericListener * this\, TGenericEmitter * param_1\, void * param_2\, FuncDef0 * param_3\, int param_4)","93"
"Disconnect","1000ccf0","void Disconnect(TGenericListener * this)","29"
"~TGenericListener","1000cd10","void ~TGenericListener(TGenericListener * this)","10"
"TGenericListener","1000cd20","undefined TGenericListener(TGenericListener * this\, TGenericEmitter * param_1\, void * param_2\, FuncDef1 * param_3\, int param_4)","54"
"TGenericListener","1000cd60","undefined TGenericListener(TGenericListener * this)","19"
"Create","1000cd80","void Create(TGenericEmitter * this\, void * param_1)","10"
"~TGenericEmitter","1000cd90","void ~TGenericEmitter(TGenericEmitter * this)","19"
"TGenericEmitter","1000cdb0","undefined TGenericEmitter(TGenericEmitter * this\, void * param_1)","26"
"`default_constructor_closure'","1000cdd0","void `default_constructor_closure'(TGenericEmitter * this)","12"
"TFileManager","1000cde0","undefined TFileManager(TFileManager * this)","131"
"~TFileManager","1000ce70","void ~TFileManager(TFileManager * this)","146"
"CreateFile","1000cf10","TFile * CreateFile(TFileManager * this\, TCString * a_sName\, uint param_2)","331"
"SetWorkingDirectory","1000d080","void SetWorkingDirectory(TFileManager * this\, TCString * param_1)","51"
"MountFileSystem","1000d0c0","void MountFileSystem(TFileManager * this\, TFileSystem * param_1)","154"
"UnmountFileSystem","1000d160","void UnmountFileSystem(TFileManager * this\, TFileSystem * param_1)","93"
"FindFileSystem","1000d1c0","TFileSystem * FindFileSystem(TFileManager * this\, TCString * param_1)","49"
"ValidateSystemPath","1000d200","void ValidateSystemPath(TFileManager * this)","365"
"FindFileSystem","1000d3a0","TFileSystem * FindFileSystem(TDList<class_Toshi::TFileSystem\,0> * param_1\, TCString * param_2)","101"
"First","1000d430","bool First(TSysPathIter * this\, TCString * param_1)","93"
"Next","1000d490","bool Next(TSysPathIter * this\, TCString * param_1)","95"
"TFileSystem","1000d4f0","undefined TFileSystem(TFileSystem * this\, char * param_1)","45"
"SetPrefix","1000d520","void SetPrefix(TFileSystem * this\, TCString * param_1)","110"
"Create","1000d590","TFile * Create(TCString * param_1\, uint param_2)","97"
"Destroy","1000d600","void Destroy(TFile * param_1)","85"
"CPrintf","1000d660","int CPrintf(TFile * this\, char * param_1\, ...)","22"
"WPrintf","1000d680","int WPrintf(TFile * this\, ushort * param_1\, ...)","22"
"SimplifyPath","1000d6a0","TCString SimplifyPath(TCString * param_1)","491"
"ConcatPath","1000d8b0","TCString ConcatPath(TCString * param_1\, TCString * param_2)","335"
"SplitPath","1000da00","void SplitPath(TCString * param_1\, TCString * param_2\, TCString * param_3)","181"
"~TFile","1000dac0","void ~TFile(TFile * this)","7"
"TFile","1000dad0","undefined TFile(TFile * this\, TFileSystem * param_1)","18"
"Destroy","1000daf0","void Destroy(TFile * this)","11"
"PrintFileAccess","1000db00","void PrintFileAccess(bool param_1)","3"
"~TFileSystem","1000db10","void ~TFileSystem(TFileSystem * this)","29"
"InvalidateSystemPath","1000db30","void InvalidateSystemPath(TFileManager * this)","4"
"FileSystemRelease","1000db40","void FileSystemRelease(TFileManager * this)","13"
"FileSystemWait","1000db50","void FileSystemWait(TFileManager * this)","15"
"MakeAbsolutePath","1000db60","TCString MakeAbsolutePath(TFileManager * this\, TCString * param_1)","26"
"GetWorkingDirectory","1000db80","TCString * GetWorkingDirectory(TFileManager * this)","6"
"SetSystemPath","1000db90","void SetSystemPath(TFileManager * this\, TCString * param_1)","32"
"GetSystemPath","1000dbb0","TCString * GetSystemPath(TFileManager * this)","6"
"DestroyFile","1000dbc0","void DestroyFile(TFileManager * this\, TFile * param_1)","20"
"TSysPathIter","1000dbe0","undefined TSysPathIter(TSysPathIter * this\, TSysPathIter * param_1)","19"
"TFileLexerUTF16","1000dc80","undefined TFileLexerUTF16(TFileLexerUTF16 * this)","170"
"TFileLexerUTF16","1000dd30","undefined TFileLexerUTF16(TFileLexerUTF16 * this\, TFile * param_1\, int param_2)","335"
"~TFileLexerUTF16","1000de90","void ~TFileLexerUTF16(TFileLexerUTF16 * this)","190"
"SetInputStream","1000df50","void SetInputStream(TFileLexerUTF16 * this\, TFile * param_1)","51"
"SetCharacterLookaheadSize","1000df90","void SetCharacterLookaheadSize(TFileLexerUTF16 * this\, int param_1)","210"
"Define","1000e070","void Define(TFileLexerUTF16 * this\, ushort * param_1)","257"
"Undef","1000e180","void Undef(TFileLexerUTF16 * this\, ushort * param_1)","100"
"IfDef","1000e1f0","bool IfDef(TFileLexerUTF16 * this\, ushort * param_1)","206"
"Expect","1000e2e0","bool Expect(TFileLexerUTF16 * this\, TokenType param_1)","246"
"Expect","1000e3e0","bool Expect(TFileLexerUTF16 * this\, TokenType param_1\, Token * param_2)","165"
"PeekNextToken","1000e490","Token PeekNextToken(TFileLexerUTF16 * this\, int param_1)","366"
"GetNextToken","1000e610","Token GetNextToken(TFileLexerUTF16 * this)","229"
"tostring","1000e700","char * tostring(TokenType param_1)","150"
"skipWhiteSpace","1000e7a0","void skipWhiteSpace(TFileLexerUTF16 * this)","2812"
"fillLookAhead","1000f4b0","void fillLookAhead(TFileLexerUTF16 * this)","61"
"ComputePreprocessorAllow","1000f4f0","bool ComputePreprocessorAllow(TFileLexerUTF16 * this)","60"
"get_next_token","1000f540","Token get_next_token(TFileLexerUTF16 * this)","5272"
"tostring","10010b00","TCString tostring(Token * this)","515"
"assign","10010d10","void assign(Token * this\, Token * param_1)","462"
"FUN_10010ee0","10010ee0","undefined FUN_10010ee0(void * this\, uint param_1)","336"
"FUN_10011030","10011030","undefined FUN_10011030(void * this\, uint param_1)","179"
"FUN_100110f0","100110f0","undefined FUN_100110f0(void * this\, uint param_1)","50"
"GetLastToken","10011180","Token GetLastToken(TFileLexerUTF16 * this)","28"
"DeinitialiseStatic","100111a0","void DeinitialiseStatic(void)","1"
"InitialiseStatic","100111b0","void InitialiseStatic(void)","1"
"CreateObjectInPlace","100111c0","TObject * CreateObjectInPlace(void * param_1)","26"
"CreateObject","100111e0","TObject * CreateObject(void)","40"
"GetClass","10011210","TClass * GetClass(TFileLexerUTF16 * this)","6"
"FUN_10011220","10011220","int FUN_10011220(int * param_1)","148"
"operator=","100112d0","TMath * operator=(TMath * this\, TMath * param_1)","5"
"FMod","100112e0","float FMod(float param_1\, float param_2)","31"
"FastMod","10011300","int FastMod(int param_1\, int param_2)","158"
"BitShiftMod","100113b0","int BitShiftMod(int param_1\, int param_2)","118"
"ApproxPow","10011430","float ApproxPow(float param_1\, float param_2)","198"
"Ceil","10011500","float Ceil(float param_1)","27"
"Floor","10011520","float Floor(float param_1)","27"
"Round","10011540","float Round(float param_1)","27"
"Trunc","10011560","float Trunc(float param_1)","27"
"SetFPUControlWord","10011580","void SetFPUControlWord(ushort param_1)","12"
"GetFPUControlWord","10011590","ushort GetFPUControlWord(void)","17"
"IsNaN","100115b0","bool IsNaN(float param_1)","39"
"IsFinite","100115e0","bool IsFinite(float param_1)","39"
"RoundUpPow2","10011610","int RoundUpPow2(int param_1)","44"
"RoundDownPow2","10011640","int RoundDownPow2(int param_1)","30"
"IntLog2Up","10011660","int IntLog2Up(int param_1)","37"
"IntLog2","10011690","int IntLog2(int param_1)","23"
"IntToFloat","100116b0","float IntToFloat(int param_1)","7"
"FloatToInt","100116c0","int FloatToInt(float param_1)","27"
"RoundToInt","100116e0","int RoundToInt(float param_1)","21"
"ShrinkFloat","10011700","float ShrinkFloat(float param_1)","27"
"IntToFloatRaw","10011720","float IntToFloatRaw(int param_1)","7"
"FloatToIntRaw","10011730","int FloatToIntRaw(float param_1)","7"
"RadToDeg","10011740","float RadToDeg(float param_1)","19"
"DegToRad","10011760","float DegToRad(float param_1)","19"
"Abs","10011780","float Abs(float param_1)","9"
"Abs","10011790","uint Abs(uint param_1)","12"
"Abs","100117a0","int Abs(int param_1)","12"
"RSqrt","100117b0","float RSqrt(float param_1)","17"
"Sqrt","100117d0","float Sqrt(float param_1)","9"
"ATan2","100117e0","float ATan2(float param_1\, float param_2)","17"
"Tan","10011800","float Tan(float param_1)","15"
"Cos","10011810","float Cos(float param_1)","9"
"Sin","10011820","float Sin(float param_1)","9"
"operator=","10011830","TVector2 * operator=(TVector2 * this\, TVector2 * param_1)","19"
"CrossProduct","10011850","float CrossProduct(TVector2 * this\, TVector2 * param_1)","18"
"DotProduct","10011870","float DotProduct(TVector2 * this\, TVector2 * param_1)","18"
"Set","10011890","void Set(TVector2 * this\, float param_1\, float param_2)","16"
"operator!=","100118a0","bool operator!=(TVector2 * this\, TVector2 * param_1)","27"
"operator==","100118c0","bool operator==(TVector2 * this\, TVector2 * param_1)","17"
"operator/=","100118e0","TVector2 * operator/=(TVector2 * this\, float param_1)","21"
"operator/=","10011900","TVector2 * operator/=(TVector2 * this\, TVector2 * param_1)","21"
"operator*=","10011920","TVector2 * operator*=(TVector2 * this\, float param_1)","21"
"operator*=","10011940","TVector2 * operator*=(TVector2 * this\, TVector2 * param_1)","21"
"operator-=","10011960","TVector2 * operator-=(TVector2 * this\, TVector2 * param_1)","21"
"operator+=","10011980","TVector2 * operator+=(TVector2 * this\, TVector2 * param_1)","21"
"operator()","100119a0","float * operator()(TVector2 * this\, uint param_1)","10"
"operator()","100119b0","float * operator()(TVector2 * this\, uint param_1)","10"
"TVector2","100119c0","undefined TVector2(TVector2 * this\, float * param_1)","21"
"TVector2","100119e0","undefined TVector2(TVector2 * this\, float param_1\, float param_2)","26"
"TVector2","10011a00","undefined TVector2(TVector2 * this\, TVector2 * param_1)","19"
"TVector2","10011a20","undefined TVector2(TVector2 * this)","3"
"FUN_10011a30","10011a30","int * FUN_10011a30(void * this\, int * param_1\, TPWString * param_2\, undefined * param_3)","198"
"FUN_10011b00","10011b00","int * FUN_10011b00(void * this\, int * param_1\, TPWString * param_2)","194"
"FUN_10011bd0","10011bd0","undefined FUN_10011bd0(void * this\, int param_1\, int param_2)","644"
"FUN_10011e90","10011e90","undefined FUN_10011e90(void * this\, int * param_1)","161"
"operator=","10011f40","Token * operator=(Token * this\, Token * param_1)","21"
"~Token","10011f60","void ~Token(Token * this)","116"
"Token","10011fe0","undefined Token(Token * this\, int param_1\, uint param_2)","25"
"Token","10012000","undefined Token(Token * this\, int param_1\, float param_2)","25"
"Token","10012020","undefined Token(Token * this\, int param_1\, int param_2)","25"
"Token","10012040","undefined Token(Token * this\, int param_1)","18"
"Token","10012060","undefined Token(Token * this\, TokenType param_1\, int param_2\, TPWString * param_3)","197"
"Token","10012130","undefined Token(Token * this\, TokenType param_1\, int param_2)","91"
"Token","10012190","undefined Token(Token * this\, Token * param_1)","27"
"Token","100121b0","undefined Token(Token * this)","10"
"GetType","100121c0","TokenType GetType(Token * this)","3"
"GetLine","100121d0","int GetLine(Token * this)","4"
"GetFloat","100121e0","float GetFloat(Token * this)","59"
"GetUInteger","10012220","uint GetUInteger(Token * this)","59"
"GetInteger","10012260","int GetInteger(Token * this)","59"
"GetString","100122a0","TPWString * GetString(Token * this)","73"
"GetString","100122f0","TPWString * GetString(Token * this)","73"
"operator=","10012340","ParseError * operator=(ParseError * this\, ParseError * param_1)","19"
"ThrowError","10012360","void ThrowError(TFileLexerUTF16 * this\, char * param_1)","38"
"advance","10012390","void advance(TFileLexerUTF16 * this)","38"
"advance","100123c0","void advance(TFileLexerUTF16 * this\, int param_1)","86"
"peek","10012420","int peek(TFileLexerUTF16 * this)","10"
"peek","10012430","int peek(TFileLexerUTF16 * this\, int param_1)","81"
"GetParseErrorEmitter","10012490","TEmitter<class_Toshi::TFileLexerUTF16\,class_Toshi::TFileLexerUTF16::ParseError> * GetParseErrorEmitter(TFileLexerUTF16 * this)","9"
"SetOutputComments","100124a0","void SetOutputComments(TFileLexerUTF16 * this\, bool param_1)","10"
"TGenericEmitter","100124b0","undefined TGenericEmitter(TGenericEmitter * this\, TGenericEmitter * param_1)","25"
"operator=","100124d0","TWStringPool * operator=(TWStringPool * this\, TWStringPool * param_1)","21"
"TWStringPool","100124f0","undefined TWStringPool(TWStringPool * this\, TWStringPool * param_1)","28"
"operator=","10012510","TPWString * operator=(TPWString * this\, TPWString * param_1)","62"
"~TPWString","10012550","void ~TPWString(TPWString * this)","33"
"operator!=","10012580","bool operator!=(TPWString * this\, TPWString * param_1)","18"
"operator==","100125a0","bool operator==(TPWString * this\, TPWString * param_1)","18"
"operator->","100125c0","TWString * operator->(TPWString * this)","16"
"operator*","100125d0","TWString * operator*(TPWString * this)","16"
"operator_class_Toshi::TWString_const*","100125e0","TWString * operator_class_Toshi::TWString_const*(TPWString * this)","16"
"GetVolatileWString","100125f0","TWString * GetVolatileWString(TPWString * this)","102"
"GetWString","10012660","TWString * GetWString(TPWString * this)","16"
"GetStringPool","10012670","TWStringPool * GetStringPool(TPWString * this)","6"
"TPWString","10012680","undefined TPWString(TPWString * this\, TPooledWString * param_1)","17"
"TPWString","100126a0","undefined TPWString(TPWString * this\, TPWString * param_1)","27"
"TPWString","100126c0","undefined TPWString(TPWString * this)","9"
"GetFreeList","100126d0","TFreeList * GetFreeList(void)","6"
"operator_delete","100126e0","void operator_delete(void * param_1)","22"
"operator_new","10012700","void * operator_new(uint param_1\, void * param_2)","7"
"operator_new","10012710","void * operator_new(uint param_1)","22"
"operator_new","10012730","void * operator_new(uint param_1\, char * param_2\, int param_3)","22"
"operator=","10012750","Node * operator=(Node * this\, Node * param_1)","13"
"GetMaxFreeCount","10012760","int GetMaxFreeCount(TFreeList * this)","4"
"GetFreeCount","10012770","int GetFreeCount(TFreeList * this)","3"
"GetGrowSize","10012780","int GetGrowSize(TFreeList * this)","4"
"SetGrowSize","10012790","void SetGrowSize(TFreeList * this\, int param_1)","21"
"GetCapacity","100127b0","int GetCapacity(TFreeList * this)","4"
"FUN_100127c0","100127c0","undefined FUN_100127c0(void * this\, undefined4 * param_1)","121"
"TFileLexerUTF8","100128d0","undefined TFileLexerUTF8(TFileLexerUTF8 * this)","170"
"TFileLexerUTF8","10012980","undefined TFileLexerUTF8(TFileLexerUTF8 * this\, TFile * a_pInputStream\, int a_iTokenLookaheadSize)","335"
"~TFileLexerUTF8","10012ae0","void ~TFileLexerUTF8(TFileLexerUTF8 * this)","190"
"SetInputStream","10012ba0","void SetInputStream(TFileLexerUTF8 * this\, TFile * param_1)","51"
"SetCharacterLookaheadSize","10012be0","void SetCharacterLookaheadSize(TFileLexerUTF8 * this\, int a_iLookaheadSize)","210"
"Define","10012cc0","void Define(TFileLexerUTF8 * this\, char * param_1)","257"
"Undef","10012dd0","void Undef(TFileLexerUTF8 * this\, char * param_1)","100"
"IfDef","10012e40","bool IfDef(TFileLexerUTF8 * this\, char * param_1)","206"
"Expect","10012f30","bool Expect(TFileLexerUTF8 * this\, TokenType param_1)","246"
"Expect","10013030","bool Expect(TFileLexerUTF8 * this\, TokenType param_1\, Token * param_2)","165"
"PeekNextToken","100130e0","Token * PeekNextToken(TFileLexerUTF8 * this\, Token * __return_storage_ptr__\, int a_iDistance)","366"
"GetNextToken","10013260","Token * GetNextToken(TFileLexerUTF8 * this\, Token * __return_storage_ptr__)","229"
"tostring","10013350","char * tostring(TokenType param_1)","150"
"skipWhiteSpace","100133f0","void skipWhiteSpace(TFileLexerUTF8 * this)","2810"
"fillLookAhead","100140f0","void fillLookAhead(TFileLexerUTF8 * this)","61"
"ComputePreprocessorAllow","10014130","bool ComputePreprocessorAllow(TFileLexerUTF8 * this)","60"
"get_next_token","10014180","Token * get_next_token(TFileLexerUTF8 * this\, Token * __return_storage_ptr__)","5256"
"tostring","10015730","TCString tostring(Token * this)","481"
"assign","10015920","void assign(Token * this\, Token * param_1)","462"
"FUN_10015af0","10015af0","undefined FUN_10015af0(void * this\, uint param_1)","336"
"FUN_10015c40","10015c40","undefined FUN_10015c40(void * this\, uint param_1)","179"
"FUN_10015d00","10015d00","undefined FUN_10015d00(void * this\, uint param_1)","50"
"GetLastToken","10015d90","Token * GetLastToken(TFileLexerUTF8 * this\, Token * __return_storage_ptr__)","28"
"DeinitialiseStatic","10015db0","void DeinitialiseStatic(void)","1"
"InitialiseStatic","10015dc0","void InitialiseStatic(void)","1"
"CreateObjectInPlace","10015dd0","TObject * CreateObjectInPlace(void * param_1)","26"
"CreateObject","10015df0","TObject * CreateObject(void)","40"
"GetClass","10015e20","TClass * GetClass(TFileLexerUTF8 * this)","6"
"FUN_10015e30","10015e30","int FUN_10015e30(int * param_1)","148"
"FUN_10015ee0","10015ee0","int * FUN_10015ee0(void * this\, int * param_1\, TPCString * param_2\, bool * param_3)","198"
"FUN_10015fb0","10015fb0","int * FUN_10015fb0(void * this\, int * param_1\, TPCString * param_2)","194"
"FUN_10016080","10016080","undefined FUN_10016080(void * this\, int param_1\, int param_2)","644"
"FUN_10016340","10016340","undefined FUN_10016340(void * this\, int * param_1)","161"
"operator=","100163f0","Token * operator=(Token * this\, Token * param_1)","21"
"~Token","10016410","void ~Token(Token * this)","116"
"Token","10016490","undefined Token(Token * this\, int param_1\, uint param_2)","25"
"Token","100164b0","undefined Token(Token * this\, int param_1\, float param_2)","25"
"Token","100164d0","undefined Token(Token * this\, int param_1\, int param_2)","25"
"Token","100164f0","undefined Token(Token * this\, int param_1)","18"
"Token","10016510","undefined Token(Token * this\, TokenType param_1\, int param_2\, TPCString * param_3)","197"
"Token","100165e0","undefined Token(Token * this\, TokenType param_1\, int param_2)","91"
"Token","10016640","undefined Token(Token * this\, Token * param_1)","27"
"Token","10016660","undefined Token(Token * this)","10"
"GetType","10016670","TokenType GetType(Token * this)","3"
"GetLine","10016680","int GetLine(Token * this)","4"
"GetFloat","10016690","float GetFloat(Token * this)","59"
"GetUInteger","100166d0","uint GetUInteger(Token * this)","59"
"GetInteger","10016710","int GetInteger(Token * this)","59"
"GetString","10016750","TPCString * GetString(Token * this)","73"
"GetString","100167a0","TPCString * GetString(Token * this)","73"
"operator=","100167f0","ParseError * operator=(ParseError * this\, ParseError * param_1)","19"
"ThrowError","10016810","void ThrowError(TFileLexerUTF8 * this\, char * param_1)","38"
"advance","10016840","void advance(TFileLexerUTF8 * this)","38"
"advance","10016870","void advance(TFileLexerUTF8 * this\, int param_1)","86"
"peek","100168d0","int peek(TFileLexerUTF8 * this)","10"
"peek","100168e0","int peek(TFileLexerUTF8 * this\, int param_1)","81"
"GetParseErrorEmitter","10016940","TEmitter<class_Toshi::TFileLexerUTF8\,class_Toshi::TFileLexerUTF8::ParseError> * GetParseErrorEmitter(TFileLexerUTF8 * this)","9"
"SetOutputComments","10016950","void SetOutputComments(TFileLexerUTF8 * this\, bool param_1)","10"
"operator=","10016960","TCStringPool * operator=(TCStringPool * this\, TCStringPool * param_1)","21"
"TCStringPool","10016980","undefined TCStringPool(TCStringPool * this\, TCStringPool * param_1)","28"
"operator=","100169a0","TPCString * operator=(TPCString * this\, TPCString * param_1)","62"
"~TPCString","100169e0","void ~TPCString(TPCString * this)","33"
"operator<","10016a10","bool operator<(TPCString * this\, TPCString * param_1)","20"
"operator!=","10016a30","bool operator!=(TPCString * this\, TPCString * param_1)","18"
"operator==","10016a50","bool operator==(TPCString * this\, TPCString * param_1)","18"
"operator->","10016a70","TCString * operator->(TPCString * this)","16"
"operator*","10016a80","TCString * operator*(TPCString * this)","16"
"operator_class_Toshi::TCString_const*","10016a90","TCString * operator_class_Toshi::TCString_const*(TPCString * this)","16"
"GetVolatileCString","10016aa0","TCString * GetVolatileCString(TPCString * this)","108"
"IsEmpty","10016b20","bool IsEmpty(TPCString * this)","28"
"GetCString","10016b40","TCString * GetCString(TPCString * this)","16"
"GetStringPool","10016b50","TCStringPool * GetStringPool(TPCString * this)","6"
"TPCString","10016b60","undefined TPCString(TPCString * this\, TPooledCString * param_1)","17"
"TPCString","10016b80","undefined TPCString(TPCString * this\, TPCString * param_1)","27"
"TPCString","10016ba0","undefined TPCString(TPCString * this)","9"
"GetFreeList","10016bb0","TFreeList * GetFreeList(void)","6"
"operator_delete","10016bc0","void operator_delete(void * param_1)","22"
"operator_new","10016be0","void * operator_new(uint param_1\, void * param_2)","7"
"operator_new","10016bf0","void * operator_new(uint param_1)","22"
"operator_new","10016c10","void * operator_new(uint param_1\, char * param_2\, int param_3)","22"
"FUN_10016c30","10016c30","undefined FUN_10016c30(void * this\, undefined4 * param_1)","121"
"TNullFileSystem","10016d40","undefined TNullFileSystem(TNullFileSystem * this\, char * param_1)","108"
"~TNullFileSystem","10016db0","void ~TNullFileSystem(TNullFileSystem * this)","104"
"CreateFile","10016e20","TFile * CreateFile(TNullFileSystem * this\, TCString * param_1\, uint param_2)","104"
"DestroyFile","10016e90","void DestroyFile(TNullFileSystem * this\, TFile * param_1)","33"
"VCPrintf","10016ec0","int VCPrintf(TNullFile * this\, char * param_1\, char * param_2)","84"
"VWPrintf","10016f20","int VWPrintf(TNullFile * this\, ushort * param_1\, char * param_2)","92"
"Close","10016f80","void Close(TNullFile * this)","1"
"Open","10016f90","bool Open(TNullFile * this\, TCString * param_1\, uint param_2)","8"
"~TNullFile","10016fa0","void ~TNullFile(TNullFile * this)","16"
"TNullFile","10016fb0","undefined TNullFile(TNullFile * this\, TNullFileSystem * param_1)","34"
"PutWChar","10016fe0","int PutWChar(TNullFile * this\, ushort param_1)","33"
"PutCChar","10017010","int PutCChar(TNullFile * this\, char param_1)","33"
"GetWChar","10017040","int GetWChar(TNullFile * this)","33"
"GetCChar","10017070","int GetCChar(TNullFile * this)","33"
"GetSize","100170a0","int GetSize(TNullFile * this)","3"
"Tell","100170b0","int Tell(TNullFile * this)","3"
"Seek","100170c0","bool Seek(TNullFile * this\, int param_1\, TSEEK param_2)","8"
"Write","100170d0","int Write(TNullFile * this\, void * param_1\, int param_2)","10"
"Read","100170e0","int Read(TNullFile * this\, void * param_1\, int param_2)","8"
"MakeInternalPath","100170f0","TCString MakeInternalPath(TNullFileSystem * this\, TCString * param_1)","18"
"operator=","10017190","TNullFile * operator=(TNullFile * this\, TNullFile * param_1)","27"
"TNullFile","100171b0","undefined TNullFile(TNullFile * this\, TNullFile * param_1)","39"
"GetBytesWritten","100171e0","int GetBytesWritten(TNullFile * this)","4"
"operator=","100171f0","TNullFileSystem * operator=(TNullFileSystem * this\, TNullFileSystem * param_1)","65"
"TNullFileSystem","10017240","undefined TNullFileSystem(TNullFileSystem * this\, TNullFileSystem * param_1)","67"
"GetNullFileSystem","10017290","TNullFileSystem * GetNullFileSystem(void)","6"
"TFreeList","100172a0","undefined TFreeList(TFreeList * this\, int param_1\, int param_2\, int param_3\, char * param_4)","161"
"~TFreeList","10017350","void ~TFreeList(TFreeList * this)","47"
"New","10017380","void * New(TFreeList * this\, uint param_1)","136"
"Delete","10017410","void Delete(TFreeList * this\, void * param_1)","55"
"SetCapacity","10017450","void SetCapacity(TFreeList * this\, int param_1)","44"
"Allocate","10017480","Node * Allocate(TFreeList * this\, int param_1\, uint param_2)","184"
"THPTimer","10017540","undefined THPTimer(THPTimer * this)","71"
"Update","10017590","void Update(THPTimer * this)","84"
"GetRaw64","100175f0","__uint64 GetRaw64(THPTimer * this)","24"
"GetRaw32","10017610","uint GetRaw32(THPTimer * this)","20"
"GetDelta","10017630","float GetDelta(THPTimer * this)","4"
"GetCurrent","10017640","float GetCurrent(THPTimer * this)","4"
"Reset","10017650","void Reset(THPTimer * this)","41"
"~THPTimer","10017680","void ~THPTimer(THPTimer * this)","1"
"TISOFileSystem","10017710","undefined TISOFileSystem(TISOFileSystem * this\, char * param_1\, TCString * param_2)","712"
"~TISOFileSystem","100179f0","void ~TISOFileSystem(TISOFileSystem * this)","130"
"CreateFile","10017a80","TFile * CreateFile(TISOFileSystem * this\, TCString * param_1\, uint param_2)","320"
"DestroyFile","10017bc0","void DestroyFile(TISOFileSystem * this\, TFile * param_1)","33"
"GetSubISOFile","10017bf0","bool GetSubISOFile(TISOFileSystem * this\, TISOFile * param_1\, TCString * param_2)","492"
"MakeInternalPath","10017df0","TCString MakeInternalPath(TISOFileSystem * this\, TCString * param_1)","245"
"ReadFromBuffer","10017ef0","void ReadFromBuffer(ISO9660File * this\, uchar * param_1\, uchar param_2)","348"
"Swap","10018060","void Swap(ISO9660File * param_1\, ISO9660File * param_2)","210"
"ReadInFromPathTable","10018140","uint ReadInFromPathTable(ISO9660Directory * this\, uchar * param_1\, uchar * param_2)","199"
"GetSubDir","10018210","ISO9660Directory * GetSubDir(ISO9660Directory * this\, TCString * param_1)","96"
"GetFile","10018270","ISO9660File * GetFile(ISO9660Directory * this\, TCString * param_1)","146"
"ReadFileList","10018310","void ReadFileList(ISO9660Directory * this)","667"
"SetSubDirs","100185c0","void SetSubDirs(ISO9660Directory * this\, ISO9660Directory * param_1\, uchar param_2)","91"
"PrintDirs","10018620","void PrintDirs(ISO9660Directory * this\, bool param_1\, bool param_2\, uint param_3)","389"
"ReadInFromISO","100187c0","void ReadInFromISO(ISO9660PVD * this\, TFile * param_1)","618"
"Read","10018a30","int Read(TISOFile * this\, void * param_1\, int param_2)","446"
"Write","10018bf0","int Write(TISOFile * this\, void * param_1\, int param_2)","44"
"Seek","10018c20","bool Seek(TISOFile * this\, int param_1\, TSEEK param_2)","199"
"GetWChar","10018d00","int GetWChar(TISOFile * this)","104"
"VCPrintf","10018d70","int VCPrintf(TISOFile * this\, char * param_1\, char * param_2)","44"
"VWPrintf","10018da0","int VWPrintf(TISOFile * this\, ushort * param_1\, char * param_2)","44"
"TISOFile","10018dd0","undefined TISOFile(TISOFile * this\, TISOFileSystem * param_1)","55"
"Open","10018e10","bool Open(TISOFile * this\, TCString * param_1\, uint param_2)","271"
"Close","10018f20","void Close(TISOFile * this)","50"
"ReadUnbuffered","10018f60","int ReadUnbuffered(TISOFile * this\, void * param_1\, int param_2)","294"
"LoadBuffer","10019090","bool LoadBuffer(TISOFile * this\, int param_1)","284"
"FUN_100191c0","100191c0","undefined FUN_100191c0(void * this\, uint param_1)","143"
"~TISOFile","10019250","void ~TISOFile(TISOFile * this)","16"
"PutWChar","10019260","int PutWChar(TISOFile * this\, ushort param_1)","44"
"PutCChar","10019290","int PutCChar(TISOFile * this\, char param_1)","44"
"GetCChar","100192c0","int GetCChar(TISOFile * this)","33"
"GetSize","100192f0","int GetSize(TISOFile * this)","4"
"Tell","10019300","int Tell(TISOFile * this)","4"
"GetPathTableBytePos","10019310","uint GetPathTableBytePos(ISO9660PVD * this)","18"
"ISO9660PVD","10019330","undefined ISO9660PVD(ISO9660PVD * this)","3"
"operator=","100193d0","TISOFile * operator=(TISOFile * this\, TISOFile * param_1)","63"
"TISOFile","10019410","undefined TISOFile(TISOFile * this\, TISOFile * param_1)","75"
"SetSubISOFile","10019460","void SetSubISOFile(TISOFile * this\, uint param_1\, uint param_2)","17"
"GetFileSystem","10019480","TISOFileSystem * GetFileSystem(TISOFile * this)","4"
"operator=","10019490","ISO9660PVD * operator=(ISO9660PVD * this\, ISO9660PVD * param_1)","28"
"GetBytePos","100194b0","uint GetBytePos(ISO9660PVD * this\, uint param_1)","15"
"GetPathTableSize","100194c0","uint GetPathTableSize(ISO9660PVD * this)","7"
"GetBibliographicFileID","100194d0","char * GetBibliographicFileID(ISO9660PVD * this)","6"
"GetAbstractFileID","100194e0","char * GetAbstractFileID(ISO9660PVD * this)","6"
"GetCopyrightFileID","100194f0","char * GetCopyrightFileID(ISO9660PVD * this)","6"
"GetVolumeSetID","10019500","char * GetVolumeSetID(ISO9660PVD * this)","6"
"GetVolumeID","10019510","char * GetVolumeID(ISO9660PVD * this)","6"
"operator=","10019520","ISO9660TimeStamp * operator=(ISO9660TimeStamp * this\, ISO9660TimeStamp * param_1)","5"
"operator=","10019530","ISO9660Directory * operator=(ISO9660Directory * this\, ISO9660Directory * param_1)","91"
"GetName","10019590","char * GetName(ISO9660Directory * this)","6"
"~ISO9660Directory","100195a0","void ~ISO9660Directory(ISO9660Directory * this)","18"
"ISO9660Directory","100195c0","undefined ISO9660Directory(ISO9660Directory * this)","18"
"operator=","100195e0","ISO9660File * operator=(ISO9660File * this\, ISO9660File * param_1)","85"
"GetLength","10019640","uint GetLength(ISO9660File * this)","4"
"GetLocation","10019650","uint GetLocation(ISO9660File * this)","3"
"GetName","10019660","char * GetName(ISO9660File * this)","6"
"operator=","10019670","TISOFileSystem * operator=(TISOFileSystem * this\, TISOFileSystem * param_1)","118"
"TISOFileSystem","100196f0","undefined TISOFileSystem(TISOFileSystem * this\, TISOFileSystem * param_1)","122"
"GetISOFile","10019770","TFile * GetISOFile(TISOFileSystem * this)","7"
"GetPVD","10019780","ISO9660PVD * GetPVD(TISOFileSystem * this)","6"
"GetBytePos","10019790","uint GetBytePos(TISOFileSystem * this\, uint param_1)","20"
"GetProcessorSpeed","100197b0","undefined4 GetProcessorSpeed(void)","135"
"TKernelInterface","100199d0","undefined TKernelInterface(TKernelInterface * this\, int param_1\, char * * param_2\, bool param_3)","854"
"~TKernelInterface","10019d30","void ~TKernelInterface(TKernelInterface * this)","390"
"Update","10019ee0","bool Update(TKernelInterface * this)","149"
"LoadInterface","10019f80","TKernelInterfaceDLL * LoadInterface(TKernelInterface * this\, TCString * param_1)","233"
"FindInterface","1001a070","TKernelInterfaceDLL * FindInterface(TKernelInterface * this\, TCString * param_1)","150"
"DumpInfo","1001a120","void DumpInfo(TKernelInterface * this)","652"
"GetAverageFPS","1001a400","float GetAverageFPS(TKernelInterface * this)","4"
"GetFPS","1001a410","float GetFPS(TKernelInterface * this)","21"
"UnloadInterface","1001a430","void UnloadInterface(TKernelInterface * this\, TKernelInterfaceDLL * param_1)","123"
"UnloadInterface","1001a4b0","void UnloadInterface(TKernelInterface * this\, TCString * param_1)","31"
"GetSystemTimer","1001a4d0","THPTimer * GetSystemTimer(TKernelInterface * this)","6"
"GetScheduler","1001a4e0","TScheduler * GetScheduler(TKernelInterface * this)","4"
"DeinitialiseStatic","1001a4f0","void DeinitialiseStatic(void)","1"
"InitialiseStatic","1001a500","void InitialiseStatic(void)","1"
"CreateObjectInPlace","1001a510","TObject * CreateObjectInPlace(void * param_1)","41"
"CreateObject","1001a540","TObject * CreateObject(void)","39"
"GetClass","1001a570","TClass * GetClass(TKernelInterface * this)","6"
"FUN_1001a580","1001a580","undefined FUN_1001a580(void)","1"
"FUN_1001a630","1001a630","undefined FUN_1001a630(void * this\, uint param_1)","211"
"operator=","1001a710","TMemFile * operator=(TMemFile * this\, TMemFile * param_1)","33"
"TMemFile","1001a740","undefined TMemFile(TMemFile * this\, TMemFile * param_1)","45"
"ClearStats","1001a770","void ClearStats(TMemFile * this)","1"
"DebugStats","1001a780","void DebugStats(TMemFile * this)","1"
"operator=","1001a790","TMemFileSystem * operator=(TMemFileSystem * this\, TMemFileSystem * param_1)","71"
"TMemFileSystem","1001a7e0","undefined TMemFileSystem(TMemFileSystem * this\, TMemFileSystem * param_1)","73"
"operator=","1001a830","TKernelInterfaceDLL * operator=(TKernelInterfaceDLL * this\, TKernelInterfaceDLL * param_1)","65"
"~TKernelInterfaceDLL","1001a880","void ~TKernelInterfaceDLL(TKernelInterfaceDLL * this)","65"
"TKernelInterfaceDLL","1001a8d0","undefined TKernelInterfaceDLL(TKernelInterfaceDLL * this\, TKernelInterfaceDLL * param_1)","67"
"TKernelInterfaceDLL","1001a920","undefined TKernelInterfaceDLL(TKernelInterfaceDLL * this)","34"
"TUser","1001a950","undefined TUser(TUser * this\, TUser * param_1)","29"
"GetFrameCount","1001a970","int GetFrameCount(TScheduler * this)","4"
"GetTotalTime","1001a980","float GetTotalTime(TScheduler * this)","4"
"GetCurrentTimeDelta","1001a990","float GetCurrentTimeDelta(TScheduler * this)","4"
"TLocalisedString","1001a9a0","undefined TLocalisedString(TLocalisedString * this)","23"
"TLocalisedString","1001a9c0","undefined TLocalisedString(TLocalisedString * this\, int param_1\, TPCString param_2\, TLocale * param_3)","78"
"~TLocalisedString","1001aa10","void ~TLocalisedString(TLocalisedString * this)","80"
"TLocaleInfo","1001aa60","undefined TLocaleInfo(TLocaleInfo * this\, int param_1\, TPCString * param_2\, TPCString * param_3)","109"
"TLocale","1001aad0","undefined TLocale(TLocale * this)","125"
"~TLocale","1001ab50","void ~TLocale(TLocale * this)","637"
"Reset","1001ae50","void Reset(TLocale * this)","624"
"LoadInfo","1001b150","bool LoadInfo(TLocale * this\, TCString * param_1)","1651"
"FindLocaleInfo","1001b820","TLocaleInfo * FindLocaleInfo(TLocale * this\, TPCString * param_1)","201"
"FindLocaleInfo","1001b900","TLocaleInfo * FindLocaleInfo(TLocale * this\, char * param_1)","73"
"ChangeLocale","1001b950","void ChangeLocale(TLocale * this\, TPCString * param_1)","242"
"ChangeLocale","1001ba50","void ChangeLocale(TLocale * this\, char * param_1)","297"
"ChangeLocale","1001bb90","void ChangeLocale(TLocale * this\, TLocaleInfo * param_1)","201"
"IsValid","1001bc60","bool IsValid(TLocale * this\, TPCString * param_1)","103"
"IsValid","1001bcd0","bool IsValid(TLocale * this\, char * param_1)","163"
"IsValid","1001bd80","bool IsValid(TLocale * this\, int param_1)","54"
"Get","1001bdc0","TLString Get(TLocale * this\, TPCString * param_1)","399"
"Get","1001bf60","TLString Get(TLocale * this\, char * param_1)","80"
"Get","1001bfb0","TLString Get(TLocale * this\, int param_1)","302"
"GetOptional","1001c0f0","TLString GetOptional(TLocale * this\, TPCString * param_1)","290"
"GetOptional","1001c230","TLString GetOptional(TLocale * this\, char * param_1)","150"
"Format","1001c2d0","TLString Format(TLocale * this\, TPCString * param_1\, ...)","176"
"Format","1001c380","TLString Format(TLocale * this\, char * param_1\, ...)","177"
"Format","1001c440","TLString Format(TLocale * this\, int param_1\, ...)","177"
"GetTemporary","1001c500","TLString GetTemporary(TLocale * this\, ushort * param_1)","406"
"GetTemporary","1001c6a0","TLString GetTemporary(TLocale * this\, int param_1)","74"
"GetVolatile","1001c6f0","TLString GetVolatile(TLocale * this\, ushort * param_1)","330"
"GetVolatile","1001c840","TLString GetVolatile(TLocale * this\, int param_1)","74"
"Insert","1001c890","TLocalisedString * Insert(TLocale * this\, TPCString * param_1\, TPWString * param_2)","606"
"Insert","1001cb10","TLocalisedString * Insert(TLocale * this\, char * param_1\, TPWString * param_2)","82"
"Insert","1001cb70","TLocalisedString * Insert(TLocale * this\, int param_1\, TPWString * param_2)","420"
"AddLocale","1001cd30","TLocaleInfo * AddLocale(TLocale * this\, TPCString * param_1)","562"
"Dump","1001cf80","void Dump(TLocale * this)","740"
"Load","1001d310","bool Load(TLocale * this\, TCString * param_1)","1509"
"FindTemporary","1001d940","TLocalisedString * FindTemporary(TLocale * this\, TPWString * param_1)","299"
"Remove","1001dab0","void Remove(TLocale * this\, TLocalisedString * a_rPooledString)","304"
"FUN_1001dbe0","1001dbe0","undefined FUN_1001dbe0(void * this\, uint param_1)","179"
"FUN_1001dca0","1001dca0","undefined FUN_1001dca0(void * this\, uint param_1)","50"
"FUN_1001dce0","1001dce0","undefined FUN_1001dce0(void * this\, uint param_1)","179"
"GetVolatile","1001de30","TLString GetVolatile(TLocale * this\, TWString * param_1)","39"
"GetTemporary","1001de60","TLString GetTemporary(TLocale * this\, TWString * param_1)","39"
"Delete","1001de90","void Delete(TLocalisedString * this)","29"
"IsTemporary","1001deb0","bool IsTemporary(TLocalisedString * this)","15"
"FUN_1001df50","1001df50","int * FUN_1001df50(void * this\, int * param_1\, TPCString * param_2\, undefined * param_3)","198"
"FUN_1001e020","1001e020","int * FUN_1001e020(void * this\, int * param_1\, TPCString * param_2)","211"
"FUN_1001e100","1001e100","undefined FUN_1001e100(void * this\, int param_1\, int param_2)","614"
"FUN_1001e3c0","1001e3c0","int * FUN_1001e3c0(void * this\, int * param_1\, int * param_2\, undefined * param_3)","288"
"FUN_1001e4f0","1001e4f0","int * FUN_1001e4f0(void * this\, int * param_1\, int * param_2)","266"
"FUN_1001e600","1001e600","undefined FUN_1001e600(void * this\, int param_1\, int param_2)","372"
"FUN_1001e7a0","1001e7a0","undefined FUN_1001e7a0(void * this\, int * param_1)","117"
"FUN_1001e820","1001e820","int * FUN_1001e820(void * this\, int * param_1\, TPCString * param_2\, undefined * param_3)","198"
"FUN_1001e8f0","1001e8f0","int * FUN_1001e8f0(void * this\, int * param_1\, TPCString * param_2)","211"
"FUN_1001e9d0","1001e9d0","undefined FUN_1001e9d0(void * this\, int param_1\, int param_2)","614"
"FUN_1001ec90","1001ec90","undefined FUN_1001ec90(void * this\, int * param_1)","163"
"operator=","1001ed40","TLocale * operator=(TLocale * this\, TLocale * param_1)","96"
"TLocale","1001eda0","undefined TLocale(TLocale * this\, TLocale * param_1)","117"
"GetCurrentLocaleInfo","1001ee20","TLocaleInfo * GetCurrentLocaleInfo(TLocale * this)","4"
"GetNumberedStrings","1001ee30","TMap<int\,class_Toshi::TLocalisedString*\,struct_Toshi::TComparator<int>_> * GetNumberedStrings(TLocale * this)","6"
"GetNamedStrings","1001ee40","TMap<class_Toshi::TPCString\,class_Toshi::TLocalisedString*\,struct_Toshi::TPCString::Comparator> * GetNamedStrings(TLocale * this)","6"
"GetAvailLocaleInfo","1001ee50","TMap<class_Toshi::TPCString\,class_Toshi::TLocaleInfo*\,struct_Toshi::TPCString::Comparator> * GetAvailLocaleInfo(TLocale * this)","6"
"operator=","1001ee60","TLocaleChangeEvent * operator=(TLocaleChangeEvent * this\, TLocaleChangeEvent * param_1)","19"
"TLocaleChangeEvent","1001ee80","undefined TLocaleChangeEvent(TLocaleChangeEvent * this\, TLocale * param_1\, TLocaleInfo * param_2)","18"
"operator=","1001eea0","TLocaleInfo * operator=(TLocaleInfo * this\, TLocaleInfo * param_1)","122"
"~TLocaleInfo","1001ef20","void ~TLocaleInfo(TLocaleInfo * this)","67"
"TLocaleInfo","1001ef70","undefined TLocaleInfo(TLocaleInfo * this\, TLocaleInfo * param_1)","63"
"GetWordBreakStyle","1001efb0","WordBreakStyle GetWordBreakStyle(TLocaleInfo * this)","4"
"GetFileName","1001efc0","TPCString GetFileName(TLocaleInfo * this)","30"
"GetName","1001efe0","TPCString GetName(TLocaleInfo * this)","30"
"GetIndex","1001f000","int GetIndex(TLocaleInfo * this)","3"
"operator=","1001f010","TLString * operator=(TLString * this\, TLString * param_1)","62"
"~TLString","1001f050","void ~TLString(TLString * this)","33"
"operator<","1001f080","bool operator<(TLString * this\, TLString * param_1)","31"
"operator!=","1001f0a0","bool operator!=(TLString * this\, TLString * param_1)","18"
"operator==","1001f0c0","bool operator==(TLString * this\, TLString * param_1)","18"
"operator->","1001f0e0","TWString * operator->(TLString * this)","29"
"operator*","1001f100","TWString * operator*(TLString * this)","29"
"operator_class_Toshi::TWString_const*","1001f120","TWString * operator_class_Toshi::TWString_const*(TLString * this)","29"
"GetVolatileString","1001f140","TWString * GetVolatileString(TLString * this)","152"
"GetLocalisedString","1001f1f0","TWString * GetLocalisedString(TLString * this)","29"
"GetIdentifierString","1001f210","TCString * GetIdentifierString(TLString * this)","29"
"Compare","1001f230","int Compare(TLString * this\, TLString * param_1)","28"
"IsTemporary","1001f250","bool IsTemporary(TLString * this)","32"
"GetLocale","1001f270","TLocale * GetLocale(TLString * this)","13"
"TLString","1001f280","undefined TLString(TLString * this\, TLocalisedString * param_1)","17"
"TLString","1001f2a0","undefined TLString(TLString * this\, TLString * param_1)","27"
"TLString","1001f2c0","undefined TLString(TLString * this)","9"
"GetLocalisedString","1001f2d0","TPWString * GetLocalisedString(TLocalisedString * this)","6"
"GetIdentifierString","1001f2e0","TPCString * GetIdentifierString(TLocalisedString * this)","6"
"GetIdentifierInt","1001f2f0","int GetIdentifierInt(TLocalisedString * this)","4"
"GetFreeList","1001f300","TFreeList * GetFreeList(void)","6"
"operator_delete","1001f310","void operator_delete(void * param_1)","22"
"operator_new","1001f330","void * operator_new(uint param_1\, void * param_2)","7"
"operator_new","1001f340","void * operator_new(uint param_1)","22"
"operator_new","1001f360","void * operator_new(uint param_1\, char * param_2\, int param_3)","22"
"FUN_1001f380","1001f380","undefined FUN_1001f380(void * this\, undefined4 * param_1)","207"
"FUN_1001f460","1001f460","undefined FUN_1001f460(void * this\, undefined4 * param_1)","121"
"FUN_1001f4f0","1001f4f0","undefined FUN_1001f4f0(void * this\, undefined4 * param_1)","207"
"TruncToInt","1001f5d0","int TruncToInt(float param_1)","52"
"FloorToInt","1001f610","int FloorToInt(float param_1)","31"
"CeilToInt","1001f630","int CeilToInt(float param_1)","31"
"Sign","1001f650","float Sign(float param_1)","118"
"SphereIntersection","1001f6d0","bool SphereIntersection(TVector3 * param_1\, float param_2\, TVector3 * param_3\, float param_4\, float * param_5\, TVector3 * param_6\, float * param_7)","205"
"SphereIntersectionPlanar","1001f7a0","bool SphereIntersectionPlanar(TVector3 * param_1\, float param_2\, TVector3 * param_3\, float param_4\, float * param_5\, TVector3 * param_6\, float * param_7)","191"
"SphereIntersectionDynamic","1001f860","float SphereIntersectionDynamic(TVector3 * param_1\, float param_2\, TVector3 * param_3\, TVector3 * param_4\, float param_5\, TVector3 * param_6)","526"
"RayVsCircle2D","1001fa80","int RayVsCircle2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, float param_4\, float * param_5\, float * param_6)","252"
"RayVsCircle3D","1001fb80","int RayVsCircle3D(TVector3 * param_1\, TVector3 * param_2\, TVector3 * param_3\, float param_4\, float * param_5\, float * param_6)","259"
"RaySegmentVsLine2D","1001fc90","bool RaySegmentVsLine2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4\, float * param_5)","152"
"PointVsPlane2D","1001fd30","bool PointVsPlane2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3)","79"
"PointVsPlane2DF","1001fd80","float PointVsPlane2DF(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3)","54"
"RayVsCapsule2D","1001fdc0","bool RayVsCapsule2D(TVector2 * param_1\, TVector2 * param_2\, float * param_3\, TVector2 * param_4\, TVector2 * param_5\, float param_6)","1125"
"CalculateCapsuleNormal2D","10020230","void CalculateCapsuleNormal2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4)","189"
"PointInsideCapsule2D","100202f0","bool PointInsideCapsule2D(TVector2 * param_1\, TVector2 * param_2\, float param_3\, TVector2 * param_4)","138"
"PushPointOutOfCapsule2D","10020380","float PushPointOutOfCapsule2D(TVector2 * param_1\, TVector2 * param_2\, float param_3\, TVector2 * param_4\, TVector2 * param_5\, TVector2 * param_6\, float * param_7)","725"
"LineVsLine2D","10020660","bool LineVsLine2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4\, float * param_5)","176"
"LineVsLine2D","10020710","bool LineVsLine2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4\, float * param_5\, float * param_6)","213"
"LineVsLine2D","100207f0","bool LineVsLine2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4\, TVector2 * param_5)","110"
"LineSegmentVsLineSegment2D","10020860","bool LineSegmentVsLineSegment2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4\, TVector2 * param_5)","190"
"LineSegmentVsLine2D","10020920","bool LineSegmentVsLine2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4\, TVector2 * param_5)","139"
"ClosestPointOnLine2D","100209b0","float ClosestPointOnLine2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3)","98"
"DistancePointToLineSq","10020a20","float DistancePointToLineSq(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3)","158"
"ClosestPointOnLineOverTime2D","10020ac0","float ClosestPointOnLineOverTime2D(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, TVector2 * param_4\, float param_5)","226"
"PointVsPlane3D","10020bb0","bool PointVsPlane3D(TVector3 * param_1\, TVector3 * param_2\, TVector3 * param_3)","86"
"GetAxisChangeLimit3D","10020c10","void GetAxisChangeLimit3D(TVector3 * param_1\, TVector3 * param_2\, TVector3 * param_3\, float param_4\, TVector3 * param_5)","339"
"LERPAngle","10020d70","float LERPAngle(float param_1\, float param_2\, float param_3)","100"
"NormaliseAngle","10020de0","void NormaliseAngle(float * param_1)","109"
"GetAngleDifference","10020e50","float GetAngleDifference(float param_1\, float param_2)","54"
"GetDirectedAngleDifference","10020e90","float GetDirectedAngleDifference(float param_1\, float param_2\, bool param_3)","75"
"Gain","10020ee0","float Gain(float param_1\, float param_2)","116"
"Gain075","10020f60","float Gain075(float param_1)","401"
"Bias","10021100","float Bias(float param_1\, float param_2)","225"
"GetCapsuleZone","100211f0","int GetCapsuleZone(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3\, float param_4)","114"
"Clip","10021270","void Clip(int * param_1\, int param_2\, int param_3)","35"
"Clip","100212a0","void Clip(float * param_1\, float param_2\, float param_3)","54"
"LERP","100212e0","float LERP(float param_1\, float param_2\, float param_3)","29"
"DecrMinf","10021300","float DecrMinf(float param_1\, float param_2\, float param_3)","30"
"IncrMaxf","10021320","float IncrMaxf(float param_1\, float param_2\, float param_3)","30"
"DistancePointToLine","10021340","float DistancePointToLine(TVector2 * param_1\, TVector2 * param_2\, TVector2 * param_3)","29"
"Sign","10021360","int Sign(int param_1)","31"
"Pow","10021380","float Pow(float param_1\, float param_2)","74"
"Log","100213d0","float Log(float param_1)","67"
"Exp","10021420","float Exp(float param_1)","67"
"ATan","10021470","float ATan(float param_1)","67"
"ACos","100214c0","float ACos(float param_1)","67"
"ASin","10021510","float ASin(float param_1)","67"
"SinCos","10021560","void SinCos(float param_1\, float * param_2\, float * param_3)","23"
"Identity","10021580","void Identity(TMatrix44 * this)","129"
"Determinant4","10021610","float Determinant4(TMatrix44 * this)","208"
"Determinant","100216e0","float Determinant(TMatrix44 * this)","69"
"Invert4","10021730","bool Invert4(TMatrix44 * this\, TMatrix44 * param_1)","1259"
"Invert","10021c20","bool Invert(TMatrix44 * this\, TMatrix44 * param_1)","672"
"InvertArbitrary","10021ed0","bool InvertArbitrary(TMatrix44 * this\, TMatrix44 * param_1)","1040"
"InvertOrthogonal","100222e0","void InvertOrthogonal(TMatrix44 * this\, TMatrix44 * param_1)","409"
"Transpose","100224a0","void Transpose(TMatrix44 * this\, TMatrix44 * param_1)","195"
"Add","10022570","void Add(TMatrix44 * this\, TMatrix44 * param_1\, TMatrix44 * param_2)","76"
"Subtract","100225c0","void Subtract(TMatrix44 * this\, TMatrix44 * param_1\, TMatrix44 * param_2)","76"
"Multiply","10022610","void Multiply(TMatrix44 * this\, TMatrix44 * a_rLeft\, TMatrix44 * a_rRight)","146"
"Multiply","100226b0","void Multiply(TMatrix44 * this\, TMatrix44 * param_1\, float param_2)","67"
"InvertOrthogonal","10022700","void InvertOrthogonal(TMatrix44 * this)","65"
"Multiply","10022750","void Multiply(TMatrix44 * this\, TMatrix44 * param_1)","137"
"IsEqual","100227e0","bool IsEqual(TMatrix44 * this\, TMatrix44 * param_1)","91"
"IsOrthogonal","10022840","bool IsOrthogonal(TMatrix44 * this)","107"
"IsOrthonormal","100228b0","bool IsOrthonormal(TMatrix44 * this)","191"
"IsReflected","10022970","bool IsReflected(TMatrix44 * this)","62"
"Scale","100229b0","void Scale(TMatrix44 * this\, float param_1\, float param_2\, float param_3)","87"
"Scale","10022a10","void Scale(TMatrix44 * this\, TVector4 * param_1)","83"
"RotateX","10022a70","void RotateX(TMatrix44 * this\, float param_1)","151"
"RotateY","10022b10","void RotateY(TMatrix44 * this\, float param_1)","142"
"RotateZ","10022ba0","void RotateZ(TMatrix44 * this\, float param_1)","138"
"LookAtTarget","10022c30","void LookAtTarget(TMatrix44 * this\, TVector3 * param_1\, TVector3 * param_2)","80"
"Translate","10022c80","void Translate(TMatrix44 * this\, float param_1\, float param_2\, float param_3)","56"
"TransformVector","10022cc0","void TransformVector(TVector3 * param_1\, TMatrix44 * param_2\, TVector3 * param_3)","104"
"TransformVector","10022d30","void TransformVector(TVector4 * param_1\, TMatrix44 * param_2\, TVector4 * param_3)","152"
"RotateVector","10022dd0","void RotateVector(TVector3 * param_1\, TMatrix44 * param_2\, TVector3 * param_3)","95"
"RotateVector","10022e30","void RotateVector(TVector4 * a_rOutVector\, TMatrix44 * a_rMatrix\, TVector4 * a_rVector)","101"
"TransformPlane","10022ea0","void TransformPlane(TPlane * param_1\, TMatrix44 * param_2\, TPlane * param_3)","259"
"TransformPlaneOrthogonal","10022fb0","void TransformPlaneOrthogonal(TPlane * param_1\, TMatrix44 * param_2\, TPlane * param_3)","45"
"MatToQuat","10022fe0","void MatToQuat(TQuaternion * param_1\, TMatrix44 * param_2)","336"
"SetFromQuaternion","10023130","TMatrix44 * SetFromQuaternion(TMatrix44 * this\, TQuaternion * param_1)","239"
"PushQuaternion","10023220","TMatrix44 * PushQuaternion(TMatrix44 * this\, TQuaternion * param_1\, TMatrix44 * param_2\, TVector3 * param_3)","72"
"operator*","10023320","TPlane operator*(TMatrix44 * this\, TPlane * param_1)","23"
"operator*","10023340","TVector4 * operator*(TMatrix44 * this\, TVector4 * __return_storage_ptr__\, TVector4 * param_1)","23"
"operator*","10023360","TVector3 operator*(TMatrix44 * this\, TVector3 * param_1)","23"
"GetTranslate","10023380","void GetTranslate(TMatrix44 * this\, TVector4 * param_1)","30"
"GetTranslate","100233a0","void GetTranslate(TMatrix44 * this\, TVector3 * param_1)","24"
"SetTranslate","100233c0","void SetTranslate(TMatrix44 * this\, float param_1\, float param_2\, float param_3)","24"
"SetTranslate","100233e0","void SetTranslate(TMatrix44 * this\, TVector4 * param_1)","30"
"SetTranslate","10023400","void SetTranslate(TMatrix44 * this\, TVector3 * param_1)","24"
"Translate","10023420","void Translate(TMatrix44 * this\, TVector4 * param_1)","22"
"Translate","10023440","void Translate(TMatrix44 * this\, TVector3 * param_1)","22"
"LookAtTarget","10023460","void LookAtTarget(TMatrix44 * this\, TVector3 * param_1)","21"
"Rotate","10023480","void Rotate(TMatrix44 * this\, float param_1\, float param_2\, float param_3)","47"
"Scale","100234b0","void Scale(TMatrix44 * this\, float param_1)","19"
"IsIdentity","100234d0","bool IsIdentity(TMatrix44 * this)","15"
"Divide","100234e0","void Divide(TMatrix44 * this\, float param_1)","32"
"Multiply","10023500","void Multiply(TMatrix44 * this\, float param_1)","18"
"Subtract","10023520","void Subtract(TMatrix44 * this\, TMatrix44 * param_1)","18"
"Add","10023540","void Add(TMatrix44 * this\, TMatrix44 * param_1)","18"
"Invert","10023560","bool Invert(TMatrix44 * this)","11"
"Divide","10023570","void Divide(TMatrix44 * this\, TMatrix44 * param_1\, float param_2)","36"
"operator/","100235a0","TMatrix44 * operator/(TMatrix44 * this\, TMatrix44 * __return_storage_ptr__\, float param_1)","24"
"operator*","100235c0","TMatrix44 * operator*(TMatrix44 * this\, TMatrix44 * __return_storage_ptr__\, float param_1)","24"
"operator*","100235e0","TMatrix44 * operator*(TMatrix44 * this\, TMatrix44 * __return_storage_ptr__\, TMatrix44 * param_1)","24"
"operator-","10023600","TMatrix44 * operator-(TMatrix44 * this\, TMatrix44 * __return_storage_ptr__\, TMatrix44 * param_1)","24"
"operator+","10023620","TMatrix44 * operator+(TMatrix44 * this\, TMatrix44 * __return_storage_ptr__\, TMatrix44 * param_1)","24"
"operator=","10023640","TMatrix44ID * operator=(TMatrix44ID * this\, TMatrix44ID * param_1)","28"
"TMatrix44ID","10023660","undefined TMatrix44ID(TMatrix44ID * this\, TMatrix44ID * param_1)","109"
"TMatrix44ID","100236d0","undefined TMatrix44ID(TMatrix44ID * this)","3"
"GetID","100236e0","uint GetID(TMatrix44ID * this)","4"
"SetID","100236f0","void SetID(TMatrix44ID * this\, uint param_1)","10"
"operator=","10023700","TMatrix44 * operator=(TMatrix44 * this\, TMatrix44 * param_1)","103"
"DebugPrint","10023770","void DebugPrint(TMatrix44 * this\, char * param_1)","3"
"SetBasisVector4","10023780","void SetBasisVector4(TMatrix44 * this\, int param_1\, TVector4 * param_2)","42"
"GetBasisVector4","100237b0","void GetBasisVector4(TMatrix44 * this\, int param_1\, TVector4 * param_2)","42"
"AsBasisVector4","100237e0","TVector4 * AsBasisVector4(TMatrix44 * this\, int param_1)","13"
"AsBasisVector4","100237f0","TVector4 * AsBasisVector4(TMatrix44 * this\, int param_1)","13"
"SetBasisVector3","10023800","void SetBasisVector3(TMatrix44 * this\, int param_1\, TVector3 * param_2)","35"
"GetBasisVector3","10023830","void GetBasisVector3(TMatrix44 * this\, int param_1\, TVector3 * param_2)","35"
"AsBasisVector3","10023860","TVector3 * AsBasisVector3(TMatrix44 * this\, int param_1)","13"
"AsBasisVector3","10023870","TVector3 * AsBasisVector3(TMatrix44 * this\, int param_1)","13"
"Set","10023880","void Set(TMatrix44 * this\, float param_1\, float param_2\, float param_3\, float param_4\, float param_5\, float param_6\, float param_7\, float param_8\, float param_9\, float param_10\, float param_11\, float param_12\, float param_13\, float param_14\, float param_15\, float param_16)","114"
"operator!=","10023900","bool operator!=(TMatrix44 * this\, TMatrix44 * param_1)","27"
"operator==","10023920","bool operator==(TMatrix44 * this\, TMatrix44 * param_1)","17"
"operator/=","10023940","TMatrix44 * operator/=(TMatrix44 * this\, float param_1)","21"
"operator*=","10023960","TMatrix44 * operator*=(TMatrix44 * this\, float param_1)","21"
"operator*=","10023980","TMatrix44 * operator*=(TMatrix44 * this\, TMatrix44 * param_1)","21"
"operator-=","100239a0","TMatrix44 * operator-=(TMatrix44 * this\, TMatrix44 * param_1)","21"
"operator+=","100239c0","TMatrix44 * operator+=(TMatrix44 * this\, TMatrix44 * param_1)","21"
"operator()","100239e0","float * operator()(TMatrix44 * this\, uint param_1\, uint param_2)","19"
"operator()","10023a00","float * operator()(TMatrix44 * this\, uint param_1\, uint param_2)","19"
"TMatrix44","10023a20","undefined TMatrix44(TMatrix44 * this\, float param_1\, float param_2\, float param_3\, float param_4\, float param_5\, float param_6\, float param_7\, float param_8\, float param_9\, float param_10\, float param_11\, float param_12\, float param_13\, float param_14\, float param_15\, float param_16)","106"
"TMatrix44","10023a90","undefined TMatrix44(TMatrix44 * this\, TMatrix44 * param_1)","103"
"TMatrix44","10023b00","undefined TMatrix44(TMatrix44 * this)","3"
"operator=","10023b10","TQuaternion * operator=(TQuaternion * this\, TQuaternion * param_1)","31"
"DebugPrint","10023b30","void DebugPrint(TQuaternion * this\, char * param_1)","3"
"AsVector4","10023b40","TVector4 * AsVector4(TQuaternion * this)","3"
"AsVector4","10023b50","TVector4 * AsVector4(TQuaternion * this)","3"
"GetVectorDirection","10023b60","void GetVectorDirection(TQuaternion * this\, TVector3 * param_1)","23"
"Slerp","10023b80","void Slerp(TQuaternion * this\, TQuaternion * param_1\, float param_2)","23"
"SetInverse","10023ba0","void SetInverse(TQuaternion * this)","17"
"SetConjugate","10023bc0","void SetConjugate(TQuaternion * this)","17"
"Normalise","10023be0","void Normalise(TQuaternion * this)","41"
"Magnitude","10023c10","float Magnitude(TQuaternion * this)","28"
"MagnitudeSq","10023c30","float MagnitudeSq(TQuaternion * this)","26"
"SetIdentity","10023c50","void SetIdentity(TQuaternion * this)","33"
"Set","10023c80","void Set(TQuaternion * this\, float param_1\, float param_2\, float param_3\, float param_4)","30"
"TQuaternion","10023ca0","undefined TQuaternion(TQuaternion * this\, TQuaternion * param_1)","31"
"TQuaternion","10023cc0","undefined TQuaternion(TQuaternion * this\, TVector3 * param_1\, float param_2)","26"
"TQuaternion","10023ce0","undefined TQuaternion(TQuaternion * this\, float param_1\, float param_2\, float param_3\, float param_4)","32"
"TQuaternion","10023d00","undefined TQuaternion(TQuaternion * this)","3"
"TMemFileSystem","10023d10","undefined TMemFileSystem(TMemFileSystem * this\, char * param_1)","180"
"~TMemFileSystem","10023dd0","void ~TMemFileSystem(TMemFileSystem * this)","94"
"CreateFile","10023e30","TFile * CreateFile(TMemFileSystem * this\, TCString * param_1\, uint param_2)","104"
"DestroyFile","10023ea0","void DestroyFile(TMemFileSystem * this\, TFile * param_1)","33"
"CreateFile","10023ed0","TFile * CreateFile(TMemFileSystem * this\, TFile * param_1)","96"
"Read","10023f30","int Read(TMemFile * this\, void * param_1\, int param_2)","150"
"Seek","10023fd0","bool Seek(TMemFile * this\, int param_1\, TSEEK param_2)","93"
"GetCChar","10024030","int GetCChar(TMemFile * this)","45"
"GetWChar","10024060","int GetWChar(TMemFile * this)","45"
"VCPrintf","10024090","int VCPrintf(TMemFile * this\, char * param_1\, char * param_2)","84"
"VWPrintf","100240f0","int VWPrintf(TMemFile * this\, ushort * param_1\, char * param_2)","92"
"DumpFile","10024150","void DumpFile(TMemFile * this)","81"
"Open","100241b0","bool Open(TMemFile * this\, TCString * param_1\, uint param_2)","162"
"Open","10024260","bool Open(TMemFile * this\, TFile * param_1)","88"
"Close","100242c0","void Close(TMemFile * this)","33"
"~TMemFile","100242f0","void ~TMemFile(TMemFile * this)","16"
"TMemFile","10024300","undefined TMemFile(TMemFile * this\, TMemFileSystem * param_1)","38"
"PutWChar","10024330","int PutWChar(TMemFile * this\, ushort param_1)","33"
"PutCChar","10024360","int PutCChar(TMemFile * this\, char param_1)","33"
"GetSize","10024390","int GetSize(TMemFile * this)","4"
"Tell","100243a0","int Tell(TMemFile * this)","7"
"Write","100243b0","int Write(TMemFile * this\, void * param_1\, int param_2)","7"
"MakeInternalPath","100243c0","TCString MakeInternalPath(TMemFileSystem * this\, TCString * param_1)","25"
"MapSizeToFreeList","100243e0","uint MapSizeToFreeList(uint param_1)","68"
"SysAlloc","10024430","void * SysAlloc(uint param_1)","80"
"SysFree","10024480","void SysFree(void * a_pMem)","65"
"TMemory","100244d0","undefined TMemory(TMemory * this)","201"
"GetMemNodeFromAddress","100245a0","MemNode * GetMemNodeFromAddress(void * param_1)","88"
"Alloc","10024600","void * Alloc(TMemory * this\, uint param_1\, uint param_2\, MemBlock * param_3\, char * param_4\, int param_5)","1912"
"Calloc","10024d90","void * Calloc(TMemory * this\, uint param_1\, uint param_2\, MemBlock * param_3\, char * param_4\, int param_5)","151"
"Free","10024e30","bool Free(TMemory * this\, void * a_pAllocated)","1159"
"Realloc","100252d0","void * Realloc(TMemory * this\, void * param_1\, uint param_2\, MemBlock * param_3)","44"
"Recalloc","10025300","void * Recalloc(TMemory * this\, void * param_1\, uint param_2\, MemBlock * param_3)","44"
"GetMemInfo","10025330","void GetMemInfo(MemInfo * param_1\, MemBlock * param_2)","3"
"DumpMemInfo","10025340","void DumpMemInfo(MemInfo * param_1)","242"
"DumpMemInfoToFile","10025440","void DumpMemInfoToFile(MemInfo * param_1\, TFile * param_2)","293"
"TestMemIntegrity","10025570","bool TestMemIntegrity(MemBlock * param_1)","5"
"DebugTestMemoryBlock","10025580","bool DebugTestMemoryBlock(MemBlock * param_1)","277"
"Initialise","100256a0","bool Initialise(void)","42"
"Deinitialise","100256d0","void Deinitialise(TMemory * this)","132"
"AllocMem","10025760","MemBlock * AllocMem(TMemory * this\, void * param_1\, uint param_2\, char * param_3)","743"
"FreeMem","10025a50","bool FreeMem(TMemory * this\, MemBlock * a_pMemBase)","402"
"MemRecurseR","10025bf0","void MemRecurseR(FuncDef2 * param_1\, FuncDef3 * param_2\, MemBlock * param_3\, uint param_4)","201"
"DumpSKUMemoryInfo","10025cc0","void DumpSKUMemoryInfo(void)","1"
"GetFreePhysicalMemory","10025cd0","uint GetFreePhysicalMemory(void)","6"
"MemRecurse","10025ce0","void MemRecurse(FuncDef4 * param_1\, FuncDef5 * param_2\, MemBlock * param_3)","59"
"DebugPrintHALMemInfoToFile","10025d20","void DebugPrintHALMemInfoToFile(HALMemInfo * param_1\, TFile * param_2\, char * param_3)","3"
"DebugPrintHALMemInfo","10025d30","void DebugPrintHALMemInfo(char * param_1)","3"
"DebugPrintFreeMemoryAt","10025d40","void DebugPrintFreeMemoryAt(char * param_1)","3"
"DumpAllocationsToFile","10025d50","void DumpAllocationsToFile(TFile * param_1\, MemBlock * param_2\, int param_3)","3"
"DumpAllocations","10025d60","void DumpAllocations(MemBlock * param_1\, int param_2)","3"
"GetHALMemInfo","10025d70","void GetHALMemInfo(HALMemInfo * param_1)","21"
"GetMarkedHALPhysical","10025d90","uint GetMarkedHALPhysical(void)","22"
"MarkHALPhysical","10025db0","void MarkHALPhysical(void)","9"
"IsMemNodeMB","10025dc0","MemBlock * IsMemNodeMB(MemNode * param_1)","40"
"IsAllocMB","10025df0","MemNode * IsAllocMB(void * param_1)","38"
"GetGlobalBlock","10025e20","MemBlock * GetGlobalBlock(void)","22"
"GetMemManager","10025e40","TMemory * GetMemManager(void)","15"
"~TMemory","10025e50","void ~TMemory(TMemory * this)","512"
"tmemalign","10026070","void * tmemalign(int param_1\, int param_2)","22"
"trealloc","10026090","void * trealloc(void * param_1\, int param_2)","30"
"tcalloc","100260b0","void * tcalloc(int param_1\, int param_2)","30"
"tmalloc","100260d0","void * tmalloc(int param_1\, char * param_2\, int param_3)","22"
"tfree","100260f0","void tfree(void * param_1)","22"
"TMutexLock","100261e0","undefined TMutexLock(TMutexLock * this\, TMutexLock * param_1)","13"
"MakeFunctionString","100261f0","TPCString MakeFunctionString(TMinterm * this\, char * * param_1\, TArray<class_Toshi::TPCString> * param_2)","79"
"MakeFunctionString","10026240","void MakeFunctionString(TMinterm * this\, TCString * param_1\, char * * param_2\, TArray<class_Toshi::TPCString> * param_3)","334"
"MakeFunctionString","100263b0","TPCString MakeFunctionString(TSumOfMinterms * this\, char * * param_1\, TArray<class_Toshi::TPCString> * param_2)","79"
"MakeFunctionString","10026400","void MakeFunctionString(TSumOfMinterms * this\, TCString * param_1\, char * * param_2\, TArray<class_Toshi::TPCString> * param_3)","381"
"ParseFunctionString","10026590","bool ParseFunctionString(TSumOfMinterms * this\, TCString * param_1\, char * * param_2\, TArray<class_Toshi::TPCString> * param_3)","5"
"operator=","100265a0","TSumOfMinterms * operator=(TSumOfMinterms * this\, TSumOfMinterms * param_1)","21"
"~TSumOfMinterms","100265c0","void ~TSumOfMinterms(TSumOfMinterms * this)","24"
"GetTruth","100265e0","bool GetTruth(TSumOfMinterms * this\, uint param_1)","208"
"operator+","100266d0","TSumOfMinterms * operator+(TSumOfMinterms * this\, TMinterm * param_1)","184"
"TSumOfMinterms","10026790","undefined TSumOfMinterms(TSumOfMinterms * this\, TSumOfMinterms * param_1)","28"
"TSumOfMinterms","100267b0","undefined TSumOfMinterms(TSumOfMinterms * this\, TMinterm * param_1)","233"
"TSumOfMinterms","100268a0","undefined TSumOfMinterms(TSumOfMinterms * this\, int param_1)","96"
"TSumOfMinterms","10026910","undefined TSumOfMinterms(TSumOfMinterms * this)","63"
"FUN_10026950","10026950","undefined FUN_10026950(void * this\, undefined4 * param_1)","136"
"FUN_100269f0","100269f0","undefined FUN_100269f0(void * this\, int param_1)","238"
"operator==","10026af0","bool operator==(TMinterm * this\, TMinterm * param_1)","31"
"GetTruth","10026b10","bool GetTruth(TMinterm * this\, uint param_1)","17"
"operator=","10026b30","TMinterm * operator=(TMinterm * this\, TMinterm * param_1)","19"
"TMinterm","10026b50","undefined TMinterm(TMinterm * this\, uint param_1\, uint param_2)","18"
"TMinterm","10026b70","undefined TMinterm(TMinterm * this\, TMinterm * param_1)","19"
"TMinterm","10026b90","undefined TMinterm(TMinterm * this\, bool param_1)","35"
"TMinterm","10026bc0","undefined TMinterm(TMinterm * this)","10"
"InsertBefore","10026bd0","void InsertBefore(TGenericNodeList * this\, TNode * param_1\, TNode * param_2)","111"
"InsertAfter","10026c40","void InsertAfter(TGenericNodeList * this\, TNode * param_1\, TNode * param_2)","111"
"Append","10026cb0","void Append(TGenericNodeList * this\, TGenericNodeList * param_1)","258"
"Remove","10026dc0","TNode * Remove(TGenericNodeList * this\, TNode * param_1)","111"
"RemoveAll","10026e30","void RemoveAll(TGenericNodeList * this)","62"
"Delete","10026e70","void Delete(TGenericNodeList * this\, TNode * param_1)","27"
"DeleteHead","10026e90","void DeleteHead(TGenericNodeList * this)","50"
"DeleteTail","10026ed0","void DeleteTail(TGenericNodeList * this)","50"
"DeleteAll","10026f10","void DeleteAll(TGenericNodeList * this)","48"
"~TNode","10026f40","void ~TNode(TNode * this)","55"
"operator*","10026f80","TNode * operator*(Iterator * this)","58"
"operator++","10026fc0","Iterator * operator++(Iterator * this)","69"
"operator++","10027010","Iterator operator++(Iterator * this\, int param_1)","82"
"operator--","10027070","Iterator * operator--(Iterator * this)","69"
"IsNull","100270c0","bool IsNull(Iterator * this)","15"
"operator!","100270d0","bool operator!(Iterator * this)","10"
"operator!=","100270e0","bool operator!=(Iterator * this\, Iterator * param_1)","18"
"operator==","10027100","bool operator==(Iterator * this\, Iterator * param_1)","18"
"operator_class_Toshi::TGenericNodeList::TNode*","10027120","TNode * operator_class_Toshi::TGenericNodeList::TNode*(Iterator * this)","3"
"operator->","10027130","TNode * operator->(Iterator * this)","3"
"~Iterator","10027140","void ~Iterator(Iterator * this)","1"
"Iterator","10027150","undefined Iterator(Iterator * this\, TNode * param_1)","11"
"Iterator","10027160","undefined Iterator(Iterator * this)","9"
"SetList","10027170","TGenericNodeList * SetList(TNode * this\, TGenericNodeList * param_1)","13"
"GetList","10027180","TGenericNodeList * GetList(TNode * this)","4"
"IsLinked","10027190","bool IsLinked(TNode * this)","25"
"Prev","100271b0","TNode * Prev(TNode * this)","4"
"Next","100271c0","TNode * Next(TNode * this)","4"
"TNode","100271d0","undefined TNode(TNode * this)","29"
"MakeIterator","100271f0","Iterator MakeIterator(TGenericNodeList * this\, TNode * param_1)","23"
"REnd","10027210","Iterator REnd(TGenericNodeList * this)","19"
"RBegin","10027230","Iterator RBegin(TGenericNodeList * this)","24"
"End","10027250","Iterator End(TGenericNodeList * this)","19"
"Begin","10027270","Iterator Begin(TGenericNodeList * this)","24"
"IsValid","10027290","bool IsValid(TGenericNodeList * this\, TNode * param_1)","25"
"IsEmpty","100272b0","bool IsEmpty(TGenericNodeList * this)","25"
"Count","100272d0","int Count(TGenericNodeList * this)","4"
"InsertTail","100272e0","void InsertTail(TGenericNodeList * this\, TNode * param_1)","18"
"InsertHead","10027300","void InsertHead(TGenericNodeList * this\, TNode * param_1)","18"
"RemoveTail","10027320","TNode * RemoveTail(TGenericNodeList * this)","38"
"RemoveHead","10027350","TNode * RemoveHead(TGenericNodeList * this)","38"
"Tail","10027380","TNode * Tail(TGenericNodeList * this)","10"
"Head","10027390","TNode * Head(TGenericNodeList * this)","10"
"~TGenericNodeList","100273a0","void ~TGenericNodeList(TGenericNodeList * this)","19"
"TGenericNodeList","100273c0","undefined TGenericNodeList(TGenericNodeList * this)","21"
"Iterator","100273e0","undefined Iterator(Iterator * this\, Iterator * param_1)","13"
"Reset","100273f0","void Reset(TNode * this\, int param_1)","87"
"FindChild","10027450","int FindChild(TNode * this\, TNode * param_1\, int param_2)","140"
"Remove","100274e0","void Remove(TNode * this\, int param_1)","46"
"RemoveChild","10027510","void RemoveChild(TNode * this\, TNode * param_1\, int param_2)","46"
"DumpObjectClassTree_Check","10027540","undefined4 DumpObjectClassTree_Check(TClass * param_1\, void * a_pData)","175"
"TClass","100275f0","undefined TClass(TClass * this\, char * param_1\, TClass * param_2\, FuncDef6 * param_3\, FuncDef7 * param_4\, FuncDef8 * param_5\, FuncDef9 * param_6\, uint param_7)","78"
"~TClass","10027640","void ~TClass(TClass * this)","38"
"InitialiseStatic","10027670","void InitialiseStatic(TClass * this)","74"
"DeinitialiseStatic","100276c0","void DeinitialiseStatic(TClass * this)","74"
"IsA","10027710","bool IsA(TClass * this\, TClass * param_1)","62"
"IsAttached","10027750","bool IsAttached(TClass * this)","36"
"AttachClassToParent","10027780","bool AttachClassToParent(TClass * this)","47"
"FindCommonBaseClass","100277b0","TClass * FindCommonBaseClass(TClass * param_1\, TClass * param_2)","497"
"Find","100279e0","TClass * Find(char * param_1\, TClass * param_2)","88"
"RecurseTree","10027a40","void RecurseTree(TClass * this\, FuncDef10 * param_1\, FuncDef11 * param_2\, FuncDef12 * param_3\, void * param_4)","100"
"RecurseTree2","10027ab0","void RecurseTree2(TClass * this\, FuncDef13 * param_1\, FuncDef14 * param_2\, FuncDef15 * param_3\, void * param_4)","130"
"FindRecurse","10027b40","TClass * FindRecurse(char * param_1\, TClass * param_2\, bool param_3)","119"
"~TObject","10027c10","void ~TObject(TObject * this)","7"
"TObject","10027c20","undefined TObject(TObject * this)","9"
"IsExactly","10027c30","bool IsExactly(TObject * this\, TClass * param_1)","28"
"IsA","10027c50","bool IsA(TObject * this\, TClass * param_1)","21"
"Delete","10027c70","void Delete(TObject * this)","12"
"DeinitialiseStatic","10027c80","void DeinitialiseStatic(void)","1"
"InitialiseStatic","10027c90","void InitialiseStatic(void)","1"
"CreateObjectInPlace","10027ca0","TObject * CreateObjectInPlace(void * param_1)","26"
"CreateObject","10027cc0","TObject * CreateObject(void)","40"
"GetClass","10027cf0","TClass * GetClass(TObject * this)","6"
"operator==","10027d00","bool operator==(TClass * this\, TClass * param_1)","18"
"DumpObjectClassTree","10027d20","void DumpObjectClassTree(void)","47"
"DetachClassFromParent","10027d50","bool DetachClassFromParent(TClass * this)","6"
"IsStaticInitialised","10027d60","bool IsStaticInitialised(TClass * this)","5"
"IsExactly","10027d70","bool IsExactly(TClass * this\, TClass * param_1)","19"
"GetVersionMinor","10027d90","ushort GetVersionMinor(TClass * this)","5"
"GetVersionMajor","10027da0","ushort GetVersionMajor(TClass * this)","5"
"GetVersion","10027db0","uint GetVersion(TClass * this)","4"
"GetName","10027dc0","char * GetName(TClass * this)","3"
"GetParent","10027dd0","TClass * GetParent(TClass * this)","4"
"CreateObjectInPlace","10027de0","TObject * CreateObjectInPlace(TClass * this\, void * param_1)","22"
"CreateObject","10027e00","TObject * CreateObject(TClass * this)","13"
"Compare","10027e30","int Compare(TPCString * this\, TPCString * param_1)","76"
"~TCStringPool","10027e80","void ~TCStringPool(TCStringPool * this)","324"
"Get","10028000","TPCString Get(TCStringPool * this\, TPCString ret_val_no_param\, char * param_2)","462"
"Get","100281f0","TPCString Get(TCStringPool * this\, int param_1)","74"
"GetOptional","10028240","TPCString GetOptional(TCStringPool * this\, char * param_1)","277"
"GetOptional","10028370","TPCString GetOptional(TCStringPool * this\, int param_1)","74"
"IsPresent","100283c0","bool IsPresent(TCStringPool * this\, char * param_1)","81"
"IsPresent","10028420","bool IsPresent(TCStringPool * this\, int param_1)","69"
"GetVolatile","10028470","TPCString GetVolatile(TCStringPool * this\, char * param_1)","71"
"GetVolatile","100284c0","TPCString GetVolatile(TCStringPool * this\, int param_1)","74"
"WriteFile","10028510","bool WriteFile(TCStringPool * this\, char * param_1)","829"
"ReadFile","100288e0","bool ReadFile(TCStringPool * this\, char * param_1)","1036"
"Remove","10028d10","void Remove(TCStringPool * this\, TPooledCString * param_1)","157"
"operator+","10028e10","TCString operator+(TCString * param_1\, TPCString * param_2)","58"
"Dump","10028e50","void Dump(TCStringPool * this)","1"
"GetVolatile","10028e60","TPCString GetVolatile(TCStringPool * this\, TCString * param_1)","39"
"IsPresent","10028e90","bool IsPresent(TCStringPool * this\, TCString * param_1)","26"
"GetOptional","10028eb0","TPCString GetOptional(TCStringPool * this\, TCString * param_1)","39"
"Get","10028ee0","TPCString Get(TCStringPool * this\, TCString * param_1)","39"
"TCStringPool","10028f10","undefined TCStringPool(TCStringPool * this\, char * a_szFileName\, int a_iMaxSize\, int a_iCapacity)","96"
"TCStringPool","10028f70","undefined TCStringPool(TCStringPool * this\, int param_1\, int param_2)","81"
"Delete","10028fd0","void Delete(TPooledCString * this)","43"
"~TPooledCString","10029000","void ~TPooledCString(TPooledCString * this)","28"
"TPooledCString","10029020","undefined TPooledCString(TPooledCString * this\, char * param_1\, TCStringPool * param_2)","42"
"TPooledCString","10029050","undefined TPooledCString(TPooledCString * this)","29"
"FUN_10029100","10029100","int * FUN_10029100(void * this\, int * param_1\, char * * param_2\, undefined * param_3)","204"
"FUN_100291d0","100291d0","int * FUN_100291d0(void * this\, int * param_1\, char * * param_2)","211"
"FUN_100292b0","100292b0","undefined FUN_100292b0(void * this\, int param_1\, int param_2)","372"
"FUN_10029450","10029450","undefined FUN_10029450(TCStringPool * this\, int a_iStringCount)","212"
"FUN_10029530","10029530","undefined FUN_10029530(void * this\, int * param_1)","117"
"`default_constructor_closure'","100295b0","void `default_constructor_closure'(TCStringPool * this)","17"
"TGenericPool","100295d0","undefined TGenericPool(TGenericPool * this\, int param_1\, int param_2\, int param_3\, int param_4)","209"
"Reinit","100296b0","void Reinit(TGenericPool * this)","74"
"Reset","10029700","void Reset(TGenericPool * this)","58"
"Alloc","10029740","void * Alloc(TGenericPool * this)","106"
"AllocBlock","100297b0","bool AllocBlock(TGenericPool * this)","83"
"ResetBlock","10029810","void ResetBlock(TGenericPool * this\, TBlock * param_1)","66"
"Free","10029860","void Free(TGenericPool * this\, void * param_1)","19"
"~TGenericPool","10029880","void ~TGenericPool(TGenericPool * this)","10"
"operator=","10029890","TNode * operator=(TNode * this\, TNode * param_1)","13"
"operator=","100298a0","TBlock * operator=(TBlock * this\, TBlock * param_1)","13"
"operator=","100298b0","TGenericPool * operator=(TGenericPool * this\, TGenericPool * param_1)","49"
"TProfiler","100298f0","undefined TProfiler(TProfiler * this\, char * param_1\, char * param_2\, int param_3)","170"
"PrintHeader","100299a0","void PrintHeader(void)","137"
"PrintSummary","10029a30","void PrintSummary(void)","348"
"Out","10029b90","bool Out(char * param_1\, char * param_2)","89"
"RecursiveReport","10029bf0","void RecursiveReport(int param_1)","95"
"GetProfiler","10029c50","TProfiler * GetProfiler(int param_1)","39"
"GetProfilerWithParentID","10029c80","TProfiler * GetProfilerWithParentID(int param_1)","49"
"Stop","10029cc0","void Stop(TProfiler * this)","153"
"Reset","10029d60","void Reset(TProfiler * this)","83"
"Report","10029dc0","void Report(TProfiler * this\, int param_1)","943"
"operator>","1002a170","bool operator>(TProfiler * this\, TProfiler * param_1)","339"
"TProfilerStarter","1002a2d0","undefined TProfilerStarter(TProfilerStarter * this\, TProfiler * param_1)","72"
"~TProfilerStarter","1002a320","void ~TProfilerStarter(TProfilerStarter * this)","1235"
"RecursiveCallFrom","1002a800","TProfilerStarter * RecursiveCallFrom(TProfilerStarter * this)","31"
"Start","1002a860","void Start(TProfiler * this)","18"
"GetHardwareCounterValues","1002a880","void GetHardwareCounterValues(undefined param_1)","14"
"TProfiler","1002a890","undefined TProfiler(TProfiler * this\, TProfiler * param_1)","400"
"Compare","1002aa20","int Compare(TPWString * this\, TPWString * param_1)","76"
"~TWStringPool","1002aa70","void ~TWStringPool(TWStringPool * this)","324"
"Get","1002abf0","TPWString Get(TWStringPool * this\, ushort * param_1)","462"
"Get","1002ade0","TPWString Get(TWStringPool * this\, int param_1)","74"
"GetVolatile","1002ae30","TPWString GetVolatile(TWStringPool * this\, ushort * param_1)","71"
"GetVolatile","1002ae80","TPWString GetVolatile(TWStringPool * this\, int param_1)","74"
"Dump","1002aed0","void Dump(TWStringPool * this)","465"
"Remove","1002b120","void Remove(TWStringPool * this\, TPooledWString * param_1)","157"
"operator+","1002b220","TWString operator+(TWString * param_1\, TPWString * param_2)","58"
"GetVolatile","1002b260","TPWString GetVolatile(TWStringPool * this\, TWString * param_1)","39"
"Get","1002b290","TPWString Get(TWStringPool * this\, TWString * param_1)","39"
"TWStringPool","1002b2c0","undefined TWStringPool(TWStringPool * this)","66"
"operator<","1002b310","bool operator<(TPWString * this\, TPWString * param_1)","20"
"Delete","1002b330","void Delete(TPooledWString * this)","43"
"~TPooledWString","1002b360","void ~TPooledWString(TPooledWString * this)","28"
"TPooledWString","1002b380","undefined TPooledWString(TPooledWString * this\, ushort * param_1\, TWStringPool * param_2)","42"
"TPooledWString","1002b3b0","undefined TPooledWString(TPooledWString * this)","29"
"FUN_1002b460","1002b460","int * FUN_1002b460(void * this\, int * param_1\, ushort * * param_2\, undefined * param_3)","204"
"FUN_1002b530","1002b530","int * FUN_1002b530(void * this\, int * param_1\, ushort * * param_2)","211"
"FUN_1002b610","1002b610","undefined FUN_1002b610(void * this\, int param_1\, int param_2)","372"
"Remove","1002b7b0","undefined Remove(void * this\, int * param_1)","117"
"operator*=","1002b830","TQuaternion * operator*=(TQuaternion * this\, TQuaternion * param_1)","206"
"operator*=","1002b900","TQuaternion * operator*=(TQuaternion * this\, float param_1)","39"
"operator/=","1002b930","TQuaternion * operator/=(TQuaternion * this\, TQuaternion * param_1)","42"
"operator+=","1002b960","TQuaternion * operator+=(TQuaternion * this\, TQuaternion * param_1)","42"
"operator-=","1002b990","TQuaternion * operator-=(TQuaternion * this\, TQuaternion * param_1)","42"
"operator==","1002b9c0","bool operator==(TQuaternion * this\, TQuaternion * param_1)","59"
"operator!=","1002ba00","bool operator!=(TQuaternion * this\, TQuaternion * param_1)","59"
"RotateAroundAxis","1002ba40","void RotateAroundAxis(TQuaternion * this\, TVector3 * param_1\, float param_2)","106"
"SetRotation","1002bab0","void SetRotation(TQuaternion * this\, TVector3 * param_1\, float param_2)","88"
"Negate","1002bb10","void Negate(TQuaternion * this)","31"
"MakePrincple","1002bb30","void MakePrincple(TQuaternion * this)","55"
"Slerp","1002bb70","void Slerp(TQuaternion * this\, TQuaternion * param_1\, TQuaternion * param_2\, float param_3)","258"
"Lerp","1002bc80","void Lerp(TQuaternion * this\, TQuaternion * param_1\, TQuaternion * param_2\, float param_3)","154"
"RotateVector","1002bd20","void RotateVector(TVector3 * param_1\, TQuaternion * param_2\, TVector3 * param_3)","209"
"RotateVector","1002be00","void RotateVector(TVector4 * param_1\, TQuaternion * param_2\, TVector4 * param_3)","216"
"SetVectorDirection","1002bee0","void SetVectorDirection(TQuaternion * this\, TVector3 * param_1\, TVector3 * param_2)","529"
"GetEulerXYZ","1002c100","void GetEulerXYZ(TQuaternion * this\, float * param_1)","292"
"SetFromEulerYX","1002c230","void SetFromEulerYX(TQuaternion * this\, float * param_1)","184"
"SetFromEulerRollPitchYaw","1002c2f0","void SetFromEulerRollPitchYaw(TQuaternion * this\, float param_1\, float param_2\, float param_3)","134"
"Divide","1002c3d0","void Divide(TQuaternion * param_1\, TQuaternion * param_2\, TQuaternion * param_3)","45"
"Multiply","1002c400","void Multiply(TQuaternion * param_1\, TQuaternion * param_2\, TQuaternion * param_3)","45"
"Subtract","1002c430","void Subtract(TQuaternion * param_1\, TQuaternion * param_2\, TQuaternion * param_3)","45"
"Add","1002c460","void Add(TQuaternion * param_1\, TQuaternion * param_2\, TQuaternion * param_3)","45"
"operator/","1002c490","TQuaternion operator/(TQuaternion * this\, float param_1)","71"
"operator/","1002c4e0","TQuaternion operator/(TQuaternion * this\, TQuaternion * param_1)","45"
"operator*","1002c510","TQuaternion operator*(TQuaternion * this\, float param_1)","45"
"operator*","1002c540","TQuaternion operator*(TQuaternion * this\, TQuaternion * param_1)","45"
"operator-","1002c570","TQuaternion operator-(TQuaternion * this\, TQuaternion * param_1)","45"
"operator+","1002c5a0","TQuaternion operator+(TQuaternion * this\, TQuaternion * param_1)","45"
"operator/=","1002c5d0","TQuaternion * operator/=(TQuaternion * this\, float param_1)","47"
"GetInt","1002c600","int GetInt(TRandom * this\, int param_1\, int param_2)","105"
"Isaac","1002c670","void Isaac(TRandom * this)","589"
"RandInit","1002c8c0","void RandInit(TRandom * this)","858"
"RandRaw","1002cc20","uint RandRaw(TRandom * this)","41"
"GetFloatMinRange","1002cc50","float GetFloatMinRange(TRandom * this\, float param_1\, float param_2)","38"
"GetFloatMinMax","1002cc80","float GetFloatMinMax(TRandom * this\, float param_1\, float param_2)","46"
"GetFloat2","1002ccb0","float GetFloat2(TRandom * this)","34"
"GetFloat","1002cce0","float GetFloat(TRandom * this)","28"
"GetInt","1002cd00","int GetInt(TRandom * this\, int param_1)","32"
"GetInt","1002cd20","int GetInt(TRandom * this)","10"
"GetSeed","1002cd30","uint GetSeed(TRandom * this)","3"
"SetSeed","1002cd40","void SetSeed(TRandom * this\, uint param_1)","18"
"~TRandom","1002cd60","void ~TRandom(TRandom * this)","1"
"TRandom","1002cd70","undefined TRandom(TRandom * this)","45"
"operator=","1002cda0","TRandom * operator=(TRandom * this\, TRandom * param_1)","28"
"TScheduler","1002ce40","undefined TScheduler(TScheduler * this\, TKernelInterface * param_1)","100"
"~TScheduler","1002ceb0","void ~TScheduler(TScheduler * this)","177"
"Update","1002cf70","void Update(TScheduler * this)","153"
"CreateTask","1002d010","TTask * CreateTask(TScheduler * this\, TClass * a_rTaskClass\, TTask * param_2)","222"
"DestroyTask","1002d100","void DestroyTask(TScheduler * this\, TTask * param_1)","33"
"DestroyAllTasks","1002d130","void DestroyAllTasks(TScheduler * this)","31"
"Debug_PrintTaskTree","1002d150","void Debug_PrintTaskTree(TScheduler * this)","64"
"DestroyDyingTasks","1002d190","void DestroyDyingTasks(TScheduler * this\, TTask * a_pTask)","102"
"UpdateActiveTasks","1002d200","void UpdateActiveTasks(TScheduler * this\, TTask * param_1)","150"
"DestroyTaskRecurse","1002d2a0","void DestroyTaskRecurse(TScheduler * this\, TTask * param_1)","143"
"DeleteTaskRecurse","1002d350","void DeleteTaskRecurse(TScheduler * this\, TTask * param_1)","69"
"DeleteTaskAtomic","1002d3a0","void DeleteTaskAtomic(TScheduler * this\, TTask * a_pTask)","309"
"Debug_PrintTaskTree_Rescurse","1002d4e0","void Debug_PrintTaskTree_Rescurse(TScheduler * this\, TTask * param_1\, int param_2)","239"
"DeleteTask","1002d630","void DeleteTask(TScheduler * this\, TTask * param_1)","36"
"GetTree","1002d660","TNodeTree<class_Toshi::TTask> * GetTree(TScheduler * this)","6"
"SetDebugSlowTime","1002d670","void SetDebugSlowTime(TScheduler * this\, bool param_1)","26"
"GetKernelInterface","1002d690","TKernelInterface * GetKernelInterface(TScheduler * this)","4"
"DeinitialiseStatic","1002d6a0","void DeinitialiseStatic(void)","1"
"InitialiseStatic","1002d6b0","void InitialiseStatic(void)","1"
"CreateObjectInPlace","1002d6c0","TObject * CreateObjectInPlace(void * param_1)","41"
"CreateObject","1002d6f0","TObject * CreateObject(void)","39"
"GetClass","1002d720","TClass * GetClass(TScheduler * this)","6"
"GetKernel","1002d7c0","TKernelInterface * GetKernel(TTask * this)","17"
"DeleteRecurse","1002d7e0","undefined DeleteRecurse(TNodeTree * this\, int * param_1)","106"
"Insert","1002d850","undefined Insert(TNodeTree * this\, TNodeTree_TNode * param_1\, TNodeTree_TNode * param_2)","182"
"InsertAtRoot","1002d910","undefined InsertAtRoot(TNodeTree * this\, TNodeTree_TNode * param_1\, TNodeTree_TNode * param_2)","179"
"Remove","1002d9d0","int Remove(TNodeTree * this\, int param_1\, char param_2)","324"
"Union","1002db30","void Union(TSphere * this\, TSphere * param_1\, TSphere * param_2)","216"
"ComparePlane","1002dc10","PlaneComparison ComparePlane(TSphere * this\, TPlane * param_1)","80"
"operator=","1002dc60","TSphere * operator=(TSphere * this\, TSphere * param_1)","31"
"TSphere","1002dc80","undefined TSphere(TSphere * this\, TSphere * param_1)","31"
"TSphere","1002dca0","undefined TSphere(TSphere * this\, TVector4 * param_1)","31"
"TSphere","1002dcc0","undefined TSphere(TSphere * this\, TVector3 * param_1\, float param_2)","32"
"TSphere","1002dce0","undefined TSphere(TSphere * this\, float param_1\, float param_2\, float param_3\, float param_4)","32"
"TSphere","1002dd00","undefined TSphere(TSphere * this)","3"
"Set","1002dd10","void Set(TSphere * this\, TSphere * param_1)","29"
"Set","1002dd30","void Set(TSphere * this\, TVector4 * param_1)","29"
"Set","1002dd50","void Set(TSphere * this\, TVector3 * param_1\, float param_2)","30"
"Set","1002dd70","void Set(TSphere * this\, float param_1\, float param_2\, float param_3\, float param_4)","30"
"AsVector4","1002dd90","TVector4 * AsVector4(TSphere * this)","3"
"AsVector4","1002dda0","TVector4 * AsVector4(TSphere * this)","3"
"FUN_1002ddb0","1002ddb0","char * FUN_1002ddb0(undefined4 param_1\, char * param_2\, int param_3)","129"
"Pack","1002de40","void Pack(TDateTime * this\, uint * param_1\, uint * param_2)","61"
"UnPack","1002de80","void UnPack(TDateTime * this\, uint * param_1\, uint * param_2)","51"
"StringCompare","1002dec0","int StringCompare(char * param_1\, char * param_2\, int param_3)","147"
"StringCompareNoCase","1002df60","int StringCompareNoCase(char * param_1\, char * param_2\, int param_3)","121"
"StringCopy","1002dfe0","char * StringCopy(char * param_1\, char * param_2\, int param_3)","125"
"StringLength","1002e060","int StringLength(char * a_String)","76"
"StringFindChar","1002e0b0","char * StringFindChar(char * param_1\, char param_2)","36"
"StringCharToUnicode","1002e0e0","ushort * StringCharToUnicode(ushort * a_UnicodeString\, char * a_CharString\, int param_3)","133"
"StringUnicodeToChar","1002e170","char * StringUnicodeToChar(char * param_1\, ushort * param_2\, int param_3)","129"
"HashString","1002e200","uint HashString(char * param_1)","35"
"StringCompare","1002e230","int StringCompare(ushort * param_1\, ushort * param_2\, int param_3)","124"
"StringCompareNoCase","1002e2b0","int StringCompareNoCase(ushort * param_1\, ushort * param_2\, int param_3)","124"
"StringCopy","1002e330","ushort * StringCopy(ushort * param_1\, ushort * param_2\, int param_3)","124"
"StringLength","1002e3b0","int StringLength(ushort * param_1)","69"
"StringFindChar","1002e400","ushort * StringFindChar(ushort * param_1\, ushort param_2)","39"
"HashString","1002e430","uint HashString(ushort * param_1)","37"
"CreateCStringPoolExplicit","1002e460","TCStringPool * CreateCStringPoolExplicit(int param_1\, int param_2)","74"
"CreateCStringPoolExplicit","1002e4b0","TCStringPool * CreateCStringPoolExplicit(char * param_1\, int param_2\, int param_3)","81"
"GetCStringPool","1002e510","TCStringPool * GetCStringPool(void)","65"
"GetLocalTime","1002e560","bool GetLocalTime(TDateTime * param_1)","86"
"StringFormatDateTime","1002e5c0","void StringFormatDateTime(TDateTime * param_1\, TCString * param_2)","80"
"BCDToInteger","1002e610","uint BCDToInteger(uint param_1)","66"
"GetLocale","1002e660","TLocale * GetLocale(void)","58"
"GetWStringPool","1002e6a0","TWStringPool * GetWStringPool(void)","58"
"StringFormat","1002e6e0","int StringFormat(ushort * param_1\, ushort * param_2\, ...)","36"
"StringIntToString","1002e710","char * StringIntToString(int param_1\, char * param_2\, int param_3)","27"
"StringFormat","1002e730","int StringFormat(char * param_1\, char * param_2\, ...)","36"
"MemSet","1002e760","void * MemSet(void * param_1\, int param_2\, int param_3)","21"
"MemCopy","1002e780","void * MemCopy(void * param_1\, void * param_2\, uint param_3)","27"
"TTask","1002e7a0","undefined TTask(TTask * this)","56"
"~TTask","1002e7e0","void ~TTask(TTask * this)","101"
"Create","1002e850","bool Create(TTask * this)","153"
"CreateFailed","1002e8f0","bool CreateFailed(TTask * this)","102"
"Activate","1002e960","void Activate(TTask * this\, bool param_1)","67"
"OnDeactivate","1002ea00","void OnDeactivate(TTask * this)","1"
"OnActivate","1002ea10","void OnActivate(TTask * this)","1"
"OnChildDied","1002ea20","void OnChildDied(TTask * this\, TClass * param_1\, TTask * param_2)","3"
"OnChildDying","1002ea30","bool OnChildDying(TTask * this\, TTask * param_1)","8"
"OnDestroy","1002ea40","void OnDestroy(TTask * this)","1"
"OnUpdate","1002ea50","bool OnUpdate(TTask * this\, float param_1)","8"
"OnCreate","1002ea60","bool OnCreate(TTask * this)","6"
"DestroyTask","1002ea70","void DestroyTask(TTask * this)","16"
"IsDying","1002ea80","bool IsDying(TTask * this)","16"
"IsActive","1002ea90","bool IsActive(TTask * this)","16"
"IsCreated","1002eaa0","bool IsCreated(TTask * this)","16"
"GetScheduler","1002eab0","TScheduler * GetScheduler(TTask * this)","4"
"DeinitialiseStatic","1002eac0","void DeinitialiseStatic(void)","1"
"InitialiseStatic","1002ead0","void InitialiseStatic(void)","1"
"CreateObjectInPlace","1002eae0","TObject * CreateObjectInPlace(void * param_1)","41"
"CreateObject","1002eb10","TObject * CreateObject(void)","39"
"GetClass","1002eb40","TClass * GetClass(TTask * this)","6"
"Create","1002eb50","void Create(TMutexLock * this\, TMutex * a_pMutex)","83"
"Destroy","1002ebb0","void Destroy(TMutexLock * this)","24"
"TTimer","1002ec60","undefined TTimer(TTimer * this)","61"
"OnUpdate","1002eca0","bool OnUpdate(TTimer * this\, float param_1)","237"
"OnDestroy","1002ede0","void OnDestroy(TTimer * this)","1"
"SetModeStopped","1002edf0","void SetModeStopped(TTimer * this)","15"
"SetModeContinuous","1002ee00","void SetModeContinuous(TTimer * this)","15"
"SetModeWaitFor","1002ee10","void SetModeWaitFor(TTimer * this\, float param_1)","24"
"SetModeLoop","1002ee30","void SetModeLoop(TTimer * this\, int param_1)","31"
"SetModeOnce","1002ee50","void SetModeOnce(TTimer * this)","15"
"~TTimer","1002ee60","void ~TTimer(TTimer * this)","26"
"DeinitialiseStatic","1002ee80","void DeinitialiseStatic(void)","1"
"InitialiseStatic","1002ee90","void InitialiseStatic(void)","1"
"CreateObjectInPlace","1002eea0","TObject * CreateObjectInPlace(void * param_1)","26"
"CreateObject","1002eec0","TObject * CreateObject(void)","40"
"GetClass","1002eef0","TClass * GetClass(TTimer * this)","6"
"operator=","1002ef00","TriggerEvent * operator=(TriggerEvent * this\, TriggerEvent * param_1)","31"
"TriggerEvent","1002ef20","undefined TriggerEvent(TriggerEvent * this\, int param_1\, int param_2\, float param_3\, float param_4)","32"
"RegisterUser","1002ef40","short RegisterUser(TUserHandler * this\, TUser * a_rUser)","115"
"FindUser","1002efc0","TUser * FindUser(TUserHandler * this\, char * param_1)","97"
"TUser","1002f030","undefined TUser(TUser * this\, char * a_sName)","91"
"Deregister","1002f0d0","void Deregister(TUser * this)","41"
"Register","1002f100","short Register(TUser * this)","18"
"~TUserHandler","1002f120","void ~TUserHandler(TUserHandler * this)","1"
"TUserHandler","1002f130","undefined TUserHandler(TUserHandler * this)","26"
"DeregisterUser","1002f150","void DeregisterUser(TUserHandler * this\, TUser * param_1)","46"
"Normalise","1002f180","void Normalise(TVector2 * this)","76"
"IsNormalised","1002f1d0","bool IsNormalised(TVector2 * this\, float param_1)","80"
"Distance","1002f220","float Distance(TVector2 * param_1\, TVector2 * param_2)","29"
"Lerp","1002f240","void Lerp(TVector2 * this\, TVector2 * param_1\, TVector2 * param_2\, float param_3)","42"
"Rotate","1002f270","void Rotate(TVector2 * this\, float param_1)","75"
"SubXZ","1002f2c0","void SubXZ(TVector3 * param_1\, TVector3 * param_2\, TVector2 * param_3)","38"
"GetVector3XZ","1002f360","TVector3 GetVector3XZ(TVector2 * this)","24"
"GetVector3XY","1002f380","TVector3 GetVector3XY(TVector2 * this)","24"
"SetXZFromVector3","1002f3a0","void SetXZFromVector3(TVector2 * this\, TVector3 * param_1)","17"
"SetXYFromVector3","1002f3c0","void SetXYFromVector3(TVector2 * this\, TVector3 * param_1)","17"
"AddXZ","1002f3e0","void AddXZ(TVector3 * param_1\, TVector3 * param_2\, TVector2 * param_3)","38"
"SetPerpendicular","1002f410","void SetPerpendicular(TVector2 * this)","13"
"DistanceSq","1002f420","float DistanceSq(TVector2 * param_1\, TVector2 * param_2)","27"
"CrossProduct","1002f440","float CrossProduct(TVector2 * param_1\, TVector2 * param_2)","23"
"DotProduct","1002f460","float DotProduct(TVector2 * param_1\, TVector2 * param_2)","23"
"Magnitude","1002f480","float Magnitude(TVector2 * this)","14"
"MagnitudeSq","1002f490","float MagnitudeSq(TVector2 * this)","12"
"IsEqual","1002f4a0","bool IsEqual(TVector2 * this\, TVector2 * param_1)","37"
"Divide","1002f4d0","void Divide(TVector2 * this\, float param_1)","27"
"Divide","1002f4f0","void Divide(TVector2 * this\, TVector2 * param_1)","22"
"Multiply","1002f510","void Multiply(TVector2 * this\, float param_1)","21"
"Multiply","1002f530","void Multiply(TVector2 * this\, TVector2 * param_1)","22"
"Subtract","1002f550","void Subtract(TVector2 * this\, TVector2 * param_1)","22"
"Add","1002f570","void Add(TVector2 * this\, TVector2 * param_1)","22"
"Negate","1002f590","void Negate(TVector2 * this)","15"
"Abs","1002f5a0","void Abs(TVector2 * this)","15"
"Divide","1002f5b0","void Divide(TVector2 * this\, TVector2 * param_1\, float param_2)","31"
"Divide","1002f5d0","void Divide(TVector2 * this\, TVector2 * param_1\, TVector2 * param_2)","26"
"Multiply","1002f5f0","void Multiply(TVector2 * this\, TVector2 * param_1\, float param_2)","25"
"Multiply","1002f610","void Multiply(TVector2 * this\, TVector2 * param_1\, TVector2 * param_2)","26"
"Subtract","1002f630","void Subtract(TVector2 * this\, TVector2 * param_1\, TVector2 * param_2)","26"
"Add","1002f650","void Add(TVector2 * this\, TVector2 * param_1\, TVector2 * param_2)","26"
"Negate","1002f670","void Negate(TVector2 * this\, TVector2 * param_1)","21"
"Abs","1002f690","void Abs(TVector2 * this\, TVector2 * param_1)","21"
"Set","1002f6b0","void Set(TVector2 * this\, float * param_1)","17"
"operator/","1002f6d0","TVector2 operator/(TVector2 * this\, float param_1)","24"
"operator/","1002f6f0","TVector2 operator/(TVector2 * this\, TVector2 * param_1)","24"
"operator*","1002f710","TVector2 operator*(TVector2 * this\, float param_1)","24"
"operator*","1002f730","TVector2 operator*(TVector2 * this\, TVector2 * param_1)","24"
"operator-","1002f750","TVector2 operator-(TVector2 * this\, TVector2 * param_1)","24"
"operator+","1002f770","TVector2 operator+(TVector2 * this\, TVector2 * param_1)","24"
"Abs","1002f790","void Abs(TVector3 * this\, TVector3 * param_1)","29"
"Add","1002f7b0","void Add(TVector3 * this\, TVector3 * param_1\, TVector3 * param_2)","35"
"Subtract","1002f7e0","void Subtract(TVector3 * this\, TVector3 * param_1\, TVector3 * param_2)","35"
"Multiply","1002f810","void Multiply(TVector3 * this\, TVector3 * param_1\, TVector3 * param_2)","35"
"Divide","1002f840","void Divide(TVector3 * this\, TVector3 * param_1\, TVector3 * param_2)","35"
"Abs","1002f870","void Abs(TVector3 * this)","23"
"Subtract","1002f890","void Subtract(TVector3 * this\, TVector3 * param_1)","31"
"Divide","1002f8b0","void Divide(TVector3 * this\, TVector3 * param_1)","31"
"Normalise","1002f8d0","void Normalise(TVector3 * this)","94"
"IsNormalised","1002f930","bool IsNormalised(TVector3 * this\, float param_1)","87"
"IsReasonable","1002f990","bool IsReasonable(TVector3 * this\, float param_1)","101"
"DistanceSq","1002fa00","float DistanceSq(TVector3 * param_1\, TVector3 * param_2)","39"
"Distance","1002fa30","float Distance(TVector3 * param_1\, TVector3 * param_2)","41"
"CrossProduct","1002fa60","void CrossProduct(TVector3 * this\, TVector3 * param_1\, TVector3 * param_2)","71"
"Lerp","1002fab0","void Lerp(TVector3 * this\, TVector3 * param_1\, TVector3 * param_2\, float param_3)","57"
"Lerp","1002faf0","void Lerp(TVector3 * this\, TVector3 * param_1\, float param_2)","53"
"Clip","1002fb30","void Clip(TVector3 * this\, float param_1\, float param_2)","49"
"RotateX","1002fb70","void RotateX(TVector3 * this\, float param_1)","75"
"RotateY","1002fbc0","void RotateY(TVector3 * this\, float param_1)","75"
"RotateZ","1002fc10","void RotateZ(TVector3 * this\, float param_1)","75"
"GetScalarProjectionOnUnit","1002fda0","float GetScalarProjectionOnUnit(TVector3 * this\, TVector3 * param_1)","27"
"GetScalarProjection","1002fdc0","float GetScalarProjection(TVector3 * this\, TVector3 * param_1)","49"
"SetUnitVectorProjection","1002fe00","void SetUnitVectorProjection(TVector3 * this\, TVector3 * param_1)","69"
"SetVectorProjection","1002fe50","void SetVectorProjection(TVector3 * this\, TVector3 * param_1)","69"
"DotProduct","1002fea0","float DotProduct(TVector3 * param_1\, TVector3 * param_2)","31"
"Magnitude","1002fec0","float Magnitude(TVector3 * this)","21"
"MagnitudeSq","1002fee0","float MagnitudeSq(TVector3 * this)","19"
"IsEqual","1002ff00","bool IsEqual(TVector3 * this\, TVector3 * param_1)","48"
"Divide","1002ff30","void Divide(TVector3 * this\, float param_1)","35"
"Multiply","1002ff60","void Multiply(TVector3 * this\, float param_1)","29"
"Multiply","1002ff80","void Multiply(TVector3 * this\, TVector3 * param_1)","31"
"Add","1002ffa0","void Add(TVector3 * this\, TVector3 * param_1)","31"
"Negate","1002ffc0","void Negate(TVector3 * this)","23"
"Divide","1002ffe0","void Divide(TVector3 * this\, TVector3 * param_1\, float param_2)","39"
"Multiply","10030010","void Multiply(TVector3 * this\, TVector3 * param_1\, float param_2)","33"
"Negate","10030040","void Negate(TVector3 * this\, TVector3 * param_1)","29"
"Set","10030060","void Set(TVector3 * this\, float * param_1)","23"
"operator/","10030080","TVector3 operator/(TVector3 * this\, float param_1)","24"
"operator/","100300a0","TVector3 operator/(TVector3 * this\, TVector3 * param_1)","24"
"operator*","100300c0","TVector3 operator*(TVector3 * this\, float param_1)","24"
"operator*","100300e0","TVector3 operator*(TVector3 * this\, TVector3 * param_1)","24"
"operator-","10030100","TVector3 operator-(TVector3 * this\, TVector3 * param_1)","24"
"operator+","10030120","TVector3 operator+(TVector3 * this\, TVector3 * param_1)","24"
"Set","10030140","void Set(TVector4 * this\, float * param_1)","29"
"Abs","10030160","void Abs(TVector4 * this\, TVector4 * param_1)","37"
"Negate4","10030190","void Negate4(TVector4 * this\, TVector4 * param_1)","37"
"Add","100301c0","void Add(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","41"
"Subtract","100301f0","void Subtract(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","41"
"Subtract4","10030220","void Subtract4(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","44"
"Multiply","10030250","void Multiply(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","41"
"Multiply","10030280","void Multiply(TVector4 * this\, TVector4 * param_1\, float param_2)","39"
"Divide","100302b0","void Divide(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","41"
"Divide","100302e0","void Divide(TVector4 * this\, TVector4 * param_1\, float param_2)","45"
"Max","10030310","void Max(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","110"
"Max","10030380","void Max(TVector4 * this\, TVector4 * param_1\, float param_2)","107"
"Min","100303f0","void Min(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","110"
"Min","10030460","void Min(TVector4 * this\, TVector4 * param_1\, float param_2)","107"
"Sin","100304d0","void Sin(TVector4 * this\, TVector4 * param_1)","37"
"Cos","10030500","void Cos(TVector4 * this\, TVector4 * param_1)","37"
"Abs","10030530","void Abs(TVector4 * this)","31"
"Negate4","10030550","void Negate4(TVector4 * this)","31"
"Subtract","10030570","void Subtract(TVector4 * this\, TVector4 * param_1)","31"
"Multiply4","10030590","void Multiply4(TVector4 * this\, TVector4 * param_1)","40"
"Divide","100305c0","void Divide(TVector4 * this\, TVector4 * param_1)","31"
"Max","100305e0","void Max(TVector4 * this\, TVector4 * param_1)","106"
"Max","10030650","void Max(TVector4 * this\, float param_1)","98"
"Min","100306c0","void Min(TVector4 * this\, TVector4 * param_1)","109"
"Min","10030730","void Min(TVector4 * this\, float param_1)","98"
"IsEqual","100307a0","bool IsEqual(TVector4 * this\, TVector4 * param_1)","59"
"Normalise","100307e0","void Normalise(TVector4 * this)","94"
"DistanceSq","10030840","float DistanceSq(TVector4 * param_1\, TVector4 * param_2)","39"
"Distance","10030870","float Distance(TVector4 * param_1\, TVector4 * param_2)","41"
"CrossProduct","100308a0","void CrossProduct(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2)","77"
"Lerp","100308f0","void Lerp(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2\, float param_3)","72"
"Lerp3","10030940","void Lerp3(TVector4 * this\, TVector4 * param_1\, TVector4 * param_2\, float param_3)","63"
"RotateX","10030980","void RotateX(TVector4 * this\, float param_1)","75"
"RotateY","100309d0","void RotateY(TVector4 * this\, float param_1)","75"
"RotateZ","10030a20","void RotateZ(TVector4 * this\, float param_1)","75"
"DotProduct4","10030b90","float DotProduct4(TVector4 * param_1\, TVector4 * param_2)","39"
"DotProduct3","10030bc0","float DotProduct3(TVector4 * param_1\, TVector4 * param_2)","31"
"Magnitude","10030be0","float Magnitude(TVector4 * this)","21"
"MagnitudeSq","10030c00","float MagnitudeSq(TVector4 * this)","19"
"Divide","10030c20","void Divide(TVector4 * this\, float param_1)","35"
"Multiply","10030c50","void Multiply(TVector4 * this\, float param_1)","29"
"Multiply","10030c70","void Multiply(TVector4 * this\, TVector4 * param_1)","31"
"Add","10030c90","void Add(TVector4 * this\, TVector4 * param_1)","31"
"Negate3","10030cb0","void Negate3(TVector4 * this)","23"
"Negate3","10030cd0","void Negate3(TVector4 * this\, TVector4 * param_1)","35"
"operator/","10030d00","TVector4 * operator/(TVector4 * this\, TVector4 * __return_storage_ptr__\, float param_1)","24"
"operator/","10030d20","TVector4 * operator/(TVector4 * this\, TVector4 * __return_storage_ptr__\, TVector4 * param_1)","24"
"operator*","10030d40","TVector4 * operator*(TVector4 * this\, TVector4 * __return_storage_ptr__\, float param_1)","24"
"operator*","10030d60","TVector4 * operator*(TVector4 * this\, TVector4 * __return_storage_ptr__\, TVector4 * param_1)","24"
"operator-","10030d80","TVector4 * operator-(TVector4 * this\, TVector4 * __return_storage_ptr__\, TVector4 * param_1)","24"
"operator+","10030da0","TVector4 * operator+(TVector4 * this\, TVector4 * __return_storage_ptr__\, TVector4 * param_1)","24"
"TWString","10030dc0","undefined TWString(TWString * this)","39"
"TWString","10030df0","undefined TWString(TWString * this\, int param_1)","44"
"Format","10030e20","TWString * Format(TWString * this\, ushort * param_1\, ...)","82"
"Mid","10030e80","TWString Mid(TWString * this\, int param_1\, int param_2)","170"
"Copy","10030f30","void Copy(TWString * this\, TWString * param_1\, int param_2)","92"
"Copy","10030f90","void Copy(TWString * this\, TCString * param_1\, int param_2)","81"
"Copy","10030ff0","void Copy(TWString * this\, ushort * param_1\, int param_2)","90"
"Copy","10031050","void Copy(TWString * this\, char * param_1\, int param_2)","84"
"Compare","100310b0","int Compare(TWString * this\, ushort * param_1\, int param_2)","191"
"CompareNoCase","10031180","int CompareNoCase(TWString * this\, ushort * param_1\, int param_2)","191"
"Concat","10031250","TWString * Concat(TWString * this\, TWString * param_1\, int param_2)","158"
"Concat","100312f0","TWString * Concat(TWString * this\, ushort * param_1\, int param_2)","154"
"Find","10031390","int Find(TWString * this\, ushort * param_1\, int param_2)","107"
"Find","10031400","int Find(TWString * this\, ushort param_1\, int param_2)","109"
"FindReverse","10031470","int FindReverse(TWString * this\, ushort param_1\, int param_2)","171"
"Truncate","10031520","void Truncate(TWString * this\, int param_1)","119"
"operator[]","100315a0","ushort * operator[](TWString * this\, int param_1)","79"
"operator+","100315f0","TWString operator+(TWString * this\, ushort * param_1)","104"
"IsIndexValid","10031660","bool IsIndexValid(TWString * this\, int param_1)","33"
"Print","10031690","TWString * Print(TWString * this)","131"
"Reset","10031720","void Reset(TWString * this)","22"
"AllocBuffer","10031740","bool AllocBuffer(TWString * this\, int param_1\, bool param_2)","293"
"operator+","10031870","TWString operator+(ushort * param_1\, TWString * param_2)","105"
"operator>=","100318e0","bool operator>=(ushort * param_1\, TWString * param_2)","40"
"operator<=","10031910","bool operator<=(ushort * param_1\, TWString * param_2)","40"
"operator>","10031940","bool operator>(ushort * param_1\, TWString * param_2)","40"
"operator<","10031970","bool operator<(ushort * param_1\, TWString * param_2)","40"
"operator!=","100319a0","bool operator!=(ushort * param_1\, TWString * param_2)","40"
"operator==","100319d0","bool operator==(ushort * param_1\, TWString * param_2)","40"
"FreeBuffer","10031a00","void FreeBuffer(TWString * this)","45"
"IsUnicode","10031a30","bool IsUnicode(TWString * this)","6"
"GetString","10031a40","ushort * GetString(TWString * this\, int param_1)","47"
"operator>=","10031a70","bool operator>=(TWString * this\, ushort * param_1)","36"
"operator>=","10031aa0","bool operator>=(TWString * this\, TWString * param_1)","38"
"operator<=","10031ad0","bool operator<=(TWString * this\, ushort * param_1)","36"
"operator<=","10031b00","bool operator<=(TWString * this\, TWString * param_1)","38"
"operator>","10031b30","bool operator>(TWString * this\, ushort * param_1)","36"
"operator>","10031b60","bool operator>(TWString * this\, TWString * param_1)","38"
"operator<","10031b90","bool operator<(TWString * this\, ushort * param_1)","36"
"operator<","10031bc0","bool operator<(TWString * this\, TWString * param_1)","38"
"operator!=","10031bf0","bool operator!=(TWString * this\, ushort * param_1)","36"
"operator!=","10031c20","bool operator!=(TWString * this\, TWString * param_1)","38"
"operator==","10031c50","bool operator==(TWString * this\, ushort * param_1)","36"
"operator==","10031c80","bool operator==(TWString * this\, TWString * param_1)","38"
"operator+","10031cb0","TWString operator+(TWString * this\, TWString * param_1)","48"
"operator+=","10031ce0","TWString * operator+=(TWString * this\, ushort * param_1)","23"
"operator+=","10031d00","TWString * operator+=(TWString * this\, TWString * param_1)","23"
"operator!","10031d20","bool operator!(TWString * this)","19"
"operator=","10031d40","TWString * operator=(TWString * this\, char * param_1)","23"
"operator=","10031d60","TWString * operator=(TWString * this\, ushort * param_1)","23"
"operator=","10031d80","TWString * operator=(TWString * this\, TCString * param_1)","23"
"operator=","10031da0","TWString * operator=(TWString * this\, TWString * param_1)","23"
"operator_unsigned_short_const*","10031dc0","ushort * operator_unsigned_short_const*(TWString * this)","3"
"MakeLower","10031dd0","TWString * MakeLower(TWString * this)","29"
"MakeUpper","10031df0","TWString * MakeUpper(TWString * this)","29"
"IsEmpty","10031e10","bool IsEmpty(TWString * this)","19"
"ExcessLength","10031e30","int ExcessLength(TWString * this)","5"
"Length","10031e40","int Length(TWString * this)","9"
"VFormat","10031e50","TWString * VFormat(TWString * this\, ushort * param_1\, char * param_2)","78"
"~TWString","10031ea0","void ~TWString(TWString * this)","10"
"TWString","10031eb0","undefined TWString(TWString * this\, TCString * param_1)","36"
"TWString","10031ee0","undefined TWString(TWString * this\, TWString * param_1)","36"
"TWString","10031f10","undefined TWString(TWString * this\, char * param_1)","36"
"TWString","10031f40","undefined TWString(TWString * this\, ushort * param_1)","36"
"fmod","100320ae","thunk double fmod(double _X\, double _Y)","6"
"log","100320b4","thunk double log(double _X)","6"
"pow","100320ba","thunk double pow(double _X\, double _Y)","6"
"exp","100320c0","thunk double exp(double _X)","6"
"atan","100320c6","thunk double atan(double _X)","6"
"acos","100320cc","thunk double acos(double _X)","6"
"asin","100320d2","thunk double asin(double _X)","6"
"operator_delete","100320d8","thunk void operator_delete(void * param_1)","6"
"operator_new","100320de","thunk void * operator_new(uint param_1)","6"
"FUN_1003210e","1003210e","undefined FUN_1003210e(_onexit_t param_1)","44"
"FUN_1003213a","1003213a","int FUN_1003213a(_onexit_t param_1)","18"
"__alldiv","100321d0","undefined8 __alldiv(uint param_1\, uint param_2\, uint param_3\, uint param_4)","170"
"FUN_100322bc","100322bc","undefined4 FUN_100322bc(undefined4 param_1\, int param_2)","171"
"entry","10032367","int entry(HMODULE param_1\, int param_2\, undefined4 param_3)","157"
"__dllonexit","10032404","thunk undefined __dllonexit()","6"
"_initterm","1003240a","thunk undefined _initterm()","6"
"FUN_10032410","10032410","undefined4 FUN_10032410(HMODULE param_1\, int param_2)","32"
